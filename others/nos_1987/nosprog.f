C  MAIN PROGRAM LSQHA2                                                          
C  REVISED AND DOCUMENTED 1983                                                  
C  USES FORTRAN77                                                               
C___________________________________________________________________________    
C                                                                               
C     UNIVERSITY OF FLORIDA  17 FEBRUARY 1984                                   
C                                                                               
C     THIS IS THE LATEST VERSION OF LSQHA2                                      
C     IT CONTAINS A NEW VERSION OF SUBROUTINE -SCREEN-                          
C     THIS VERSION IS COPIED TO J FANCHER/NOAA ON THIS DATE                     
C_________________________________________________________________________      
C                                                                               
C                                                                               
C  PURPOSE:                                                                     
C     PROGRAM LSQHA2, A REVISION OF LSQHA, EXPANDS A GIVEN TABULAR FUNC-        
C  TION IN THE FORM  Y(M) = SUM OF A(N)COS(F(N)M-M1), WHERE F(N) IS AN          
C  ARBITRARY SET OF FREQUENCIES.  THE SOLUTION IS A BEST FIT IN A LEAST         
C  SQUARES SENSE.  LSQHA2 IS SPECIFICALLY DESIGNED FOR THE ANALYSIS OF          
C  HOURLY TIDE DATA IN TERMS OF THE 37 TRIGONOMETRIC FUNCTIONS TRADI-           
C  TIONALLY USED BY THE N.O.S..  THE TIME INTERVAL MAY ALSO BE CHANGED          
C  BY THE USER, OR THE STANDARD LIST OF FREQUENCIES MAY BE REPLACED WITH        
C  OTHER FREQUENCIES BY THE USER.  NO PROGRAM CHANGES ARE REQUIRED WHEN         
C  USING FEWER THAN 37 CONSTITUENTS, BUT WHEN FEWER CONSTITUENTS ARE            
C  USED, SPACE MAY BE SAVED BY REWRITING THE DIMENSION STATEMENTS IN THE        
C  MAIN PROGRAM AND IN SUBROUTINE SCREEN.  REVISION OF THESE DIMENSION          
C  STATEMENTS, AND ENTERING A NEW LIST OF FREQUENCIES AND IDENTIFIERS           
C  ARE THE ONLY CHANGES REQUIRED FOR INCREASING THE NUMBER OF                   
C  FREQUENCIES.                                                                 
C     SUBROUTINE -REDATA- IS USED TO CONSTRUCT THE DATA FIELDS BY USING         
C  THE FOLLOWING VARIABLES:                                                     
C                                                                               
C     NOBS    = NUMBER OF OBSERVATIONS                                          
C     MORE    = ZERO, THE FINAL DATA IS BEING READ FOR ANY RUN                  
C             = 1, ADDITIONAL DATA ARE TO BE READ LATER                         
C     JYY     = YEAR, 4 DIGITS                X                                 
C     JMM     = MONTH                          X  FIRST                         
C     JDD     = DAY                             > DATA                          
C     JHH     = HOUR                           X  SAMPLE                        
C     JMIN    = MINUTE (IN TENTHS OF HOURS)   X                                 
C     TH(I)   = TIDAL HEIGHTS, I=1,NOBS                                         
C     THBAR   = APPROXIMATE MEAN WATER LEVEL. MUST BE A                         
C               CONSTANT FOR ANY MACHINE RUN                                    
C     XLONG   = LONGITUDE OF STATION (+ FOR WEST, - FOR EAST),                  
C               TO HUNDREDTHS OF A DEGREE.                                      
C     TIMEZ   = TIME ZONE OF STATION.  REMEMBER, + IS ASSUMED WHEN              
C               BLANK, BUT, - MUST BE USED WHEN REQUIRED.                       
C                                                                               
C     ANY OTHER PROCEDURE FOR ESTABLISHING THIS DATA FIELD IS                   
C  ACCEPTABLE.    ALL OTHER SUBROUTINES ARE HIGHLY STRUCTURED                   
C  AND SHOULD NOT BE CHANGED WITHOUT VERY CAREFUL CONSIDERATION.                
C     PROGRAM LSQHA2 IS USED FOR ALL INPUT OTHER THAN THE DATA TO BE            
C  ANALYZED, AND FOR THE INITIALIZATION OF FIELDS USED BY TWO OR MORE           
C  SUBROUTINES.                                                                 
C     PROGRAM LSQHA2 SHOULD ALSO BE USED FOR ANY REQUIRED LINKAGE TO            
C  OTHER PROGRAMS, WITH ONE EXCEPTION.  ALL FINAL COMPUTATIONAL RESULTS         
C  ARE ACCESSIBLE THROUGH PROGRAM LSQHA2 BY MEANS OF COMMON STATEMENTS          
C  OR CALL STATEMENTS.  THE EXCEPTION IS DESCRIBED IN CONNECTION WITH           
C  SUBROUTINE -SCREEN-.                                                         
C     A SINE TABLE, GENERATED BY SUBROUTINE -SNTAB2-, IS USED IN PRO-           
C  CESSING INPUT DATA.  THE RESOLUTION OF THE TABLE IS CONTROLLED BY THE        
C  USER.  SINGLE PRECISION ACCURACY IS ADEQUATE FOR TIDE DATA AND MOST          
C  OTHER MEASUREMENTS.                                                          
C     TWO TYPES OF CONTROL STATEMENTS ARE USED, VARIABLE AND BINARY.            
C  1) VARIABLE CONTROL PARAMETERS ARE LISTED IN INPUT ORDER                     
C     AS FOLLOWS:                                                               
C     NCONST   = NUMBER OF CONSTITUENTS TO BE CONSIDERED                        
C     NIPQ     = NUMBER OF ANGULAR INCREMENTS PER QUADRANT IN                   
C                THE SINE TABLE                                                 
C     NYYYY    = YEAR NUMBER OF THE DATA BEING ANALYZED.  THIS PARAMETER        
C                CONTROLS THE ADJUSTMENT FOR THE EQUILIBRIUM ARGUMENTS          
C                AND NODE FACTORS.  (0000 MEANS NO ADJUSTMENT.)                 
C     NDELTT   = TIME INCREMENTS BETWEEN OBSERVATIONS (CAN BE IN TENTHS         
C                OF HOURS).  THE NOMINAL VALUE IS 10, BUT VALUES BETWEEN        
C                1 AND 100 ARE PERMISSIBLE.                                     
C     MV       = NUMBER OF NON PERIODIC PREDICTORS. MAY BE 0                    
C     CUTOFF   = CALCULATIONS ARE TERMINATED WHEN THE NEXT PREDICTOR            
C                SELECTED ACCOUNTS FOR A FRACTION OF THE TOTAL VARIANCE         
C                LESS THAN -CUTOFF-.                                            
C     MINLAG   = MINIMUM LAG FOR NON PERIODIC PREDICTORS.                       
C     MAXLAG   = MAXIMUM LAG FOR NON PERIODIC PREDICTORS.                       
C     MINTRM   = MINIMUM NUMBER OF   :   (BOTH ARE USED IN                      
C                TERMS WANTED.       :   -SCREEN- FOR PRINTING                  
C     MAXTRM   = MAXIMUM NUMBER OF   :   PORTIONS OF THE                        
C                TERMS WANTED.       :   OUTPUT EQUATION.)                      
C                                                                               
C  2) THE BINARY CONTROL FACTORS ARE LISTED BELOW.  IN EACH CASE, A ZERO        
C  INDICATES THAT THE OPTIONAL ACTION IS NOT WANTED.  A ONE INDICATES           
C  THAT IT IS WANTED.                                                           
C                                                                               
C        . . . PROGRAM OPTIONS . . .                                            
C                                                                               
C     ICNTL(1)  = SUPPLY NEW VALUES FOR EQUILIBRIUM ARGUMENTS AND               
C                 NODE FACTORS                                                  
C     ICNTL(2)  = PRINT PORTION OF SINE TABLE                                   
C     ICNTL(3)  = REPLACE FREQUENCY TABLE BY A NEW SET OF FREQUENCIES           
C                 AND UPDATE NAME TABLE                                         
C     ICNTL(4)  = PRINT TABLE OF STANDARD DEVIATIONS                            
C     ICNTL(5)  = PRINT MATRIX OF CORRELATION COEFFICIENTS                      
C     ICNTL(6)  = PRINT SUM OF PRODUCTS MATRIX                                  
C     ICNTL(7)  = DISPLAY INTERMEDIATE RESULTS FROM SUBROUTINE -SCREEN-         
C     ICNTL(8)  = SAVE INTERMEDIATE RESULTS FROM SUBROUTINE -SCREEN-            
C     ICNTL(9)  =                                                               
C     ICNTL(10) = CALL SUBROUTINE FOR READING NONPERIODIC PREDICTOR DATA        
C     AT THIS TIME -ICNTL- IS DIMENSIONED TO HAVE UP TO 20 OPTIONS.             
C                                                                               
C     OTHER VARIABLE NAMES USED IN -LSQHA2-                                     
C                                                                               
C     FREQ(I)   = CHANGE IN THETA IN ONE TIME INCREMENT.                        
C     I1        = IF NO NON-PERIODIC PREDICTORS ARE USED, I1 = 1.               
C                 IF SUCH PREDICTORS ARE CONSIDERED,                            
C                 I1 = MAXLAG - MINLAG + 1.                                     
C     LAGS      = USED IN SUBROUTINE -REDAT3- WHEN NON PERIODIC DATA IS         
C                 INCLUDED IN THE ANALYSIS.  TOTAL NUMBER OF LAGS BEING         
C                 CONSIDERED.                                                   
C  +  NAME(I)   = ARRAY CONTAINING STANDARD SYMBOLS FOR TIDAL CONSTIT-          
C                 UENTS OR OTHER DATA TYPE IDENTIFIER USED FOR OUTPUT.          
C     NDEXY     = UPPER BOUND OF DATA MATRIX + 1; THIS COLUMN CONTAINS          
C                 (TH(I) - THBAR) FOR STANDARD HARMONIC ANALYSIS.  WHEN         
C                 ADDITIONAL TYPES OF INPUT DATA ARE USED THIS COLUMN           
C                 CONTAINS ...................                                  
C     NDEXM1    = UPPER BOUND OF DATA MATRIX                                    
C     NDEXP1    = (NDEXY + 1); THIS COLUMN CONTAINS THE CONSTITUENT             
C                 INDEX NUMBER.                                                 
C     NDEXP2    = (NDEXY + 2); THIS COLUMN CONTAINS A "2" INDICATING            
C                 AMPLITUDE PHASE PAIRS OF HARMONIC CONSTITUENTS, OR            
C                 "1" INDICATING NON PERIODIC PREDICTOR AMPLITUDES              
C                 WITH NO ASSOCIATED PHASE.                                     
C     NDR       = THE NUMBER OF DATA SETS READ.  MORE = 1, INDICATES            
C                 THAT MORE DATA ARE TO BE READ.  -NDR- WILL                    
C                 INCREMENT UNTIL ALL DATA SETS ARE READ, I.E.,                 
C                 UNTIL -MORE- IS MADE EQUAL TO ZERO.  IF MORE = 0              
C                 AT THE START, NDR = 1.                                        
C     NLAG      = DEFINED IN SUBROUTINE -REDAT3-.                               
C     NRECRD    = NUMBER OF OBSERVATIONS OR TIDAL HEIGHTS USED IN THE           
C                 ANALYSIS; EQUIVALENT TO -NOBS- IF THERE ARE NO                
C                 BREAKS IN THE DATA SERIES.                                    
C     NTYPE     = NUMBER OF NON PERIODIC PREDICTORS.  IF THERE IS NO            
C                 NON PERIODIC INPUT, -NTYPE- MUST = 1 SO THAT THE              
C                 PROGRAM WILL COMPILE PROPERLY.                                
C     NV        = NUMBER OF SINE AND COSINE VECTORS FOR PERIODIC                
C                 CONSTITIENTS; (2 * NCONST).                                   
C     SETS      = TOTAL NUMBER OF OBSERVATIONS (DATA POINTS) IN SERIES          
C                 BEING ANALYZED.  ONLY IF DATA SERIES IS ONE UNBROKEN          
C                 SET IS -SETS- EQUAL TO -NRECRD-.  IF SERIES TO BE             
C                 ANALYZED HAS BREAKS, -SETS- IS LESS THAN -NRECRD-.            
C  +  SPEED(I)  = CONSTITUENT FREQUENCY IN DEGREES-PER-SOLAR-HOUR.              
C     YEPOCH(I) = EQUILIBRIUM ARGUMENTS TO MODIFY -EPOCH- TO A STANDARD         
C                 YEAR.                                                         
C     YNODE(I)  = NODE FACTORS TO MODIFY -HSUBN- TO A STANDARD YEAR.            
C     Z(I,J)    = CREATED IN SUBROUTINE -REDAT3- FROM NON PERIODIC DATA         
C                 AND USED IN SUBROUTINE -MODT2- TO MODIFY REGRESSION           
C                 VECTOR -V-.                                                   
C                                                                               
C     (ADD THEM HERE)                                                           
C                                                                               
C      .  .  .  DIMENSION AND DECLARATION STATEMENTS .  .  .                    
C                                                                               
C **********************************************************************        
C  M1 THRU M6 MUST BE REPLACED BY NUMERICAL VALUES IN PROGRAM LSQHA2 AND        
C  IN THE DIMENSION STATEMENT IN SUBROUTINE -SCREEN- BEFORE CALCULATIONS        
C  ARE ATTEMPTED.                                                               
C     M1 = NCONST + 1 + MV          M3 = 5 * NIPQ           M5 = 2 * M2         
C     M2 = 2 * NCONST + MV + 3      M4 = 12 (USUALLY)       M6 = NCONST         
C **********************************************************************        
      INTEGER M1, M2, M3, M4, M5, M6                                            
      CHARACTER*80 ID(4)                                                       
      PARAMETER ( M1=38, M2=77, M3=5120, M4=12, M5=154, M6=37 )                 
      PARAMETER ( NTYPE=1, NRECRD=8850, LAGS=14 )                               
      REAL*8 PP(M2,M2),SPEED(M6),FREQ(M1),THETA(M1),QQ(M2,3)                    
      REAL TH(NRECRD),Z(NTYPE,NRECRD), FHOUR(M4), SIG(M2),R(M2),                
     *     TSTORE(M1),P(M6),S(M1),SX(M2),V(M2),YEPOCH(M1),YNODE(M1)             
      REAL AEPOCH(M1),AHSUBN(M1),COLA(M1),EPOCH(M1),HSUBN(M1),                  
     *     KAPPA(M1),RT(M2),R1(M2)                                              
C      REAL TIME(15)                                                            
      DIMENSION NLAG(NTYPE,LAGS),JDAY(14),NAME(M6),ABNAME(8),JR(M2)             
      DIMENSION ICNTL(20),KAY(M2),MCNST(M2),NORDER(M2),NQP(M2)                  
C                                                                               
      DIMENSION INOBS(M4),IYY(M4),IMM(M4),IDD(M4),IHH(M4),IMIN(M4)              
C     THESE DIMENSIONS ARE THE MAXIMUM SIZE FOR EACH VARIABLE THAT IS           
C     USED IN -REDATA-.                                                         
C                                                                               
C      . . . COMMON STATEMENTS . . .                                            
C                                                                               
C                                                                               
      COMMON/TRIG/ SINE(5120)                                                   
C     COMMON TRIG CARRIES THE SINE TABLE BETWEEN -SNTAB- AND -MODATA-.          
C  THE DIMENSION OF SINE MUST BE EQUAL TO OR GREATER THAN (5*NIPQ).             
C                                                                               
C     .  .  .  DATA STATEMENTS  .  .  .                                         
C                                                                               
      DATA NAME/4HM2  ,4HS2  ,4HN2  ,4HK1  ,4HM4  ,4HO1  ,                      
     1          4HM6  ,4HMK3 ,4HS4  ,4HMN4 ,4HNU2 ,4HS6  ,                      
     2          4HMU2 ,4H2N2 ,4HOO1 ,4HLAMD,4HS1  ,4HM1  ,                      
     3          4HJ1  ,4HMM  ,4HSSA ,4HSA  ,4HMSF ,4HMF  ,                      
     4          4HRHO1,4HQ1  ,4HT2  ,4HR2  ,4H2Q1 ,4HP1  ,                      
     5          4H2SM2,4HM3  ,4HL2  ,4H2MK3,4HK2  ,4HM8  ,                      
     6          4HMS4 /                                                         
      DATA ABNAME/4HV-12, 4HU-12, 4HV-18, 4HU-18, 4HV-24,                       
     * 4HU-24, 4HV-30, 4HU-30/                                                  
      DATA SPEED/ 28.9841042D0,30.0000000D0,28.4397295D0,15.0410686D0,          
     1            57.9682084D0,13.9430356D0,86.9523127D0,44.0251729D0,          
     2            60.0000000D0,57.4238337D0,28.5125831D0,90.0000000D0,          
     3            27.9682084D0,27.8953548D0,16.1391017D0,29.4556253D0,          
     4            15.0000000D0,14.4966939D0,15.5854433D0,  .5443747D0,          
     5              .0821373D0,  .0410686D0, 1.0158958D0, 1.0980331D0,          
     6            13.4715145D0,13.3986609D0,29.9589333D0,30.0410667D0,          
     7            12.8542862D0,14.9589314D0,31.0158958D0,43.4761563D0,          
     8            29.5284789D0,42.9271398D0,30.0821373D0,115.9364169D0,         
     9            58.9841042D0/                                                 
      DATA P/2.,2.,2.,1.,4.,1.,6.,3.,4.,4.,2.,6.,2.,2.,1.,2.,                   
     11.,1.,1.,0.,0.,0.,0.,0.,1.,1.,2.,2.,1.,1.,2.,3.,2.,3.,2.,                 
     28.,4./                                                                    
      DATA JDAY/-32,-1,30,58,89,119,150,180,211,242,272,303,333,364/            
      DATA NLAG/12,18,19,20,21,22,23,24,25,                                     
     *          26,27,28,29,30/                                                 
C                                                                               
C  .  .  .  PROGRAM BEGINS HERE  .  .  .                                        
C                                                                               
C * * * * * * * * * * * * ** * * * * * * * * * * * * * * * * * * *              
C                                                                               
C  SET UP CALL TO TSKTME TO MEASURE TIMES DURING EXECUTION -                    
C  STRICTLY FOR DEBUGGING PURPOSES.                                             
C                                                                               
C      CALL TSKTME                                                              
C                                                                               
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *             
C                                                                               
C     THE FOLLOWING INSTRUCTION INITIALIZES A CALL TO SUBROUTINE                
C     -SNTAB2- AT THE PROPER TIME.                                              
      ISINE = 1                                                                 
C***********************************************************************        
C                                                                               
C     . . . STEP 1 . . .                                                        
C                                                                               
C     READ AND ECHO PRINT PROGRAM CONTROL FIELDS                                
C                                                                               
C***********************************************************************        
C            
      READ (*,5) (ICNTL(I),I=1,10)
    5 FORMAT (10I2)
      READ (*,11) NCONST,NIPQ,NYYYY,NDELTT,MV,CUTOFF,TZERO,MINTRM,
     1  MAXTRM,NCOL,NROW
   11 FORMAT(5I4,2E8.2,4I4)
C********************************************************************           
C                                                                               
C     TEMPORARY PRESET VALUES FOR MINLAG AND MAXLAG                             
C                                                                               
       MINLAG = 0                                                               
       MAXLAG = 0                                                               
C                                                                               
C     UNTIL MODIFICATIONS TO ALLOW USE OF NON-PERIODIC INPUT.                   
C     AT THAT TIME MINLAG AND MAXLAG WILL BE REDESCRIBED.                       
C                                                                               
C********************************************************************           
C______________________________________________________________________         
C                                                                               
C     TEMPORARY ALTERATION                                                      
C                                                                               
      PRINT 12, NCONST,NIPQ,NYYYY,NDELTT,MV,CUTOFF,TZERO,MINTRM,                
     1 MAXTRM,NCOL,NROW                                                         
   12 FORMAT (' NCONST=',I4,' NIPQ=',I4,' NYYYY=',I5,
     1 ' NDELTT=',I3,' MV=',I3,' CUTOFF=',E8.2,' TZERO=',E8.2,
     2 ' MINTRM=',I3,' MAXTRM=',I3,' NCOL=',I4,' NROW=',I4,/)
C______________________________________________________________________         
      DELTT = NDELTT / 10
      PRINT 16, NCONST,NIPQ,DELTT,CUTOFF,NYYYY,MV,MINLAG,MAXLAG                 
   16 FORMAT (/,' HARMONIC ANALYSIS CONSIDERING',I4,' CONSTITUENTS,',         
     1 ' WITH A RESOLUTION OF',I6,' INCREMENTS IN SINE TABLE.',/,               
     2 ' THE TIME INTERVAL BETWEEN OBSERVATIONS IS',F5.2,' HOURS.',             
     3 '  PREDICTORS WHICH ACCOUNT FOR LESS THAN',F10.7,' OF THE',              
     4 ' VARIANCE',/,' OF THE INPUT DATA SERIES ARE DROPPED.',  
     5 '  HARMONIC CONSTANTS ARE ADJUSTED FOR THE YEAR',I5,' IF',
     6 ' YEAR IS NOT ZERO.',/,I3,' NONPERIODIC VARIABLES',    
     7 ' WITH A MINIMUM LAG OF',I3,' AND A MAXIMUM LAG OF ',I3,
     8 ' ARE CONSIDERED',/)                    
      PRINT 22, (ICNTL(I),I=1,10)               
   22 FORMAT (/,' BINARY CONTROL FIELDS:',10I2)
C                                                                               
C***********************************************************************        
C                                                                               
C     . . . STEP 2 . . .                                                        
C                                                                               
C     READ AND ECHO PRINT NEW VALUES FOR THE EQUILIBRIUM ARGUMENTS AND          
C     NODE FACTORS IF THESE ARE NEEDED.                                         
C                                                                               
C***********************************************************************        
      IF (ICNTL(1).EQ.0) GO TO 121
      READ (*,185) (YEPOCH(I),I=1,NCONST)
  185 FORMAT ( 18F4.1 )              
      READ (*,186) (YNODE(I),I=1,NCONST)
  186 FORMAT ( 18F4.3 )              
      PRINT 110, ( YNODE(I),I=1,NCONST)
  110 FORMAT (///,' NODE FACTORS:',///(10F9.3))
      PRINT 115, (YEPOCH(I),I=1,NCONST)                                         
  115 FORMAT (//,' GREENWICH EQUILIBRIUM ARGUMENTS:',///(10F9.1))               
  121 CONTINUE                                                                  
C                                                                               
C***********************************************************************        
C                                                                               
C     . . . STEP 3 . . .                                                        
C                                                                               
C     READ AND ECHO PRINT IDENTIFICATION LABELS (HOLLERITH INFO).               
C                                                                               
C***********************************************************************        
C                                                                               
      READ (*,189) (ID(I),I=1,4)
  189 FORMAT (A80)
      PRINT 191,(ID(I),I=1,4)
  191 FORMAT (/,A80)                                                        
C                                                                               
C***********************************************************************        
C               
C     . . . STEP 4 . . .
C                      
C     INITIALIZE COMMON FIELDS
C                            
C***********************************************************************        
C                           
      IF (ISINE.EQ.1)  CALL SNTAB2 ( NIPQ )                                     
      ISINE = 0            
      IF (ICNTL(2).NE.1) GO TO 183                                              
      PRINT 182, (SINE(I),I=1,NIPQ)                                             
  182 FORMAT (///,' SINE TABLE:',///(12F10.6))                                  
C                                                                               
C     ESTABLISH CONTROL CONSTANTS  .  .  .                                      
C                                                                               
 183  NV = 2 * NCONST                                                           
      NDEXY = NV + MV + 1                                                       
      I1 = MAXLAG + 1                                                           
      ITEST = 0                                                                 
      IF( NDEXY .LE. M2 ) GO TO 199                                             
      PRINT 195, NDEXY, M1                                                      
  195 FORMAT (1X,' THE NUMBER OF VARIABLES',I4,' EXCEEDS THE ALLOTTED ',        
     1 'ORDER OF THE CORRELATION MATRIX',I4,'.  THE TOTAL NUMBER OF ',          
     2 'VARIABLES HAS BEEN',/,' REDUCED TO FIT THE ALLOTTED SPACE.',/)          
      NDEXY = M2                                                                
      MV = M2 - NV - 1                                                          
      IF(NV .LT. NDEXY) GO TO 199                                               
      PRINT 197, M1, NCONST                                                     
 197  FORMAT(1X,'THE ALLOTTED SIZE OF THE MATRIX',I4,' IS TOO SMALL FOR         
     *THE ',I3,' CONSTITUENTS REQUESTED... CALCULATIONS TERMINATED.'            
     *,/)                                                                       
      GO TO 777                                                                 
C                                                                               
C     ZERO ALL SUMS, INITIALIZE COUNTERS AND INDICES                            
C                                                                               
  199 SETS = 0.0                                                                
      DO 130 I=1,NDEXY                                                          
      SX(I)=0.0                                                                 
      NORDER(I) = 0                                                             
      DO 125 J=1,NDEXY                                                          
  125 PP(I,J) = 0.0                                                             
  130 CONTINUE                                                                  
      NDEXP1 = NDEXY + 1                                                        
      NDEXP2 = NDEXY + 2                                                        
      NDEXM1 = NDEXY - 1                                                        
C                                                                               
C     LABEL ROWS AND COLUMNS IN MATRIX                                          
      DO 135 L=1,NDEXY                                                          
  135 PP(L,NDEXP1) = L                                                          
      DO 235 L=1,NV                                                             
 235  PP(L,NDEXP2) = 2                                                          
      DO 236 L=NV+1,NDEXM1                                                      
 236  PP(L,NDEXP2) = 1                                                          
C                                                                               
C***********************************************************************        
C                                                                               
C     . . . STEP 5 . . .                                                        
C                                                                               
C     REPLACE OR EXTEND FREQUENCY TABLE AND NAME TABLE IF NECESSARY.            
C  NOTE THAT N1 AND N2 MUST BE LESS THAN -NCONST-.                              
C                                                                               
C*************************************************************************      
C                                                                               
      IF (ICNTL(3).EQ.0) GO TO 211     
      READ (*,201) N1,N2,(SPEED(I),I=N1,N2)
  201 FORMAT (2I3,  5D11.7,20(/7D11.7) )
C                            
C     IDENTIFICATION SYMBOLS FOR NEW VARIABLES MAY BE READ HERE                 
C                             
      READ (*,208) (P(I),I=N1,N2) 
  208 FORMAT (20F1.0)           
      READ (*,209) (NAME(I),I=N1,N2)
  209 FORMAT ( 20A4 )             
      IF (N2 .LT. NCONST) N2=NCONST
      DO 35 I=N1,N2            
        NP = INT((SPEED(I)*5)/15)
        P(I) = FLOAT(NP)        
   35 CONTINUE                                                                  
C**********************************************************************         
C                                                                               
C     FOR FUTURE USE (3/15/84)                                                  
C      N3 = N2                                                                  
C                                                                               
C***************************************************************                
      PRINT 219, N1,N2                                                          
      IF(N2 .LT. NCONST) N2 = NCONST                                            
      PRINT 229, N1,N2,(NAME(I),SPEED(I),P(I),I=1,N2)                           
  219 FORMAT (///,' FREQUENCY TABLE MODIFIED FROM CONSTITUENT',I4,              
     * ' THROUGH',I4,' AS SHOWN BELOW.',//,5(' NAME  FREQUENCY   P '            
     *),//)                                                                     
  229 FORMAT (5(' ',A4,F12.7,1X,F2.0,1X))                                       
  211 CONTINUE                                                                  
C                                                                               
C***********************************************************************        
C                                                                               
C     . . . STEP 6 . . .                                                        
C                                                                               
C     ADJUST INPUT FREQUENCIES FOR COMPUTATIONAL UNITS AND TIME                 
C     INCREMENTS BETWEEN DATA VALUES                                            
C                                                                               
C***********************************************************************        
C                                                                               
      XNIPQ = FLOAT(NIPQ)                                                       
      HANG = 90./XNIPQ                                                          
      DO 44 J=1,NCONST                                                          
   44 FREQ(J) = SPEED(J)/HANG                                                   
      IF (DELTT.EQ.1.0) GO TO 239                                               
      DO 47 J=1,NCONST                                                          
   47 FREQ(J) = FREQ(J) * DELTT                                                 
  239 CONTINUE                                                                  
C                                                                               
C***********************************************************************        
C                                                                               
C     . . . STEP 7 . . .                                                        
C                                                                               
C     READ THE DATA TO BE ANALYZED.  SEE DISCUSSION IN THE INTRODUCTION.        
C                                                                               
C***********************************************************************        
C                                                                               
      NDR = 0                                                                   
  250 NDR = NDR + 1                                                             
C      TIME(1) = TTIME(0)                                                       
      CALL REDAT2 (  ICNTL, NDR, IYY, IMM, IDD, IHH, IMIN, NOBS,                
     1 MORE, JYY, JMM, JDD, JHH, JMIN, THBAR, TH, XLONG, TIMEZ,                 
     2 NYYYY ,TIME)                                                             
      INOBS(NDR) = NOBS                                                         
C      TIME(4) = TTIME(0)                                                       
C  ACCUMULATE TOTAL NUMBER OF OBSERVATIONS.                                     
      SETS = SETS + NOBS - MAXLAG                                               
C                                                                               
C     READ DATA FOR NONPERIODIC PERDICTORS                                      
C                                                                               
      IF(ICNTL(10) .EQ. 0) GO TO 140                                            
      CALL REDAT3 (TH,Z,V,THBAR,JYY,MINLAG,MAXLAG,MV,NDEXY,                     
     1  NOBS,NRECRD,NTYPE,NV)                                                   
C                                                                               
C      TIME(5) = TTIME(0)                                                       
  140 CALL MODT1 ( PP,FREQ,THETA,DELTT,FHOUR,SX,                                
     1 TH,THBAR,V,Z,ICNTL,NDR,I1,JDAY,                                          
     2 JMM,JDD,JHH,JMIN,LAGS,MAXLAG,M2,                                         
     3 NCONST,NDEXY,NIPQ,NLAG,NOBS,NRECRD,                                      
     4 NTYPE,NV )                                                               
      IF (MORE.NE.0) GO TO 250                                                  
C      TIME(6) = TTIME(0)                                                       
C***********************************************************************        
C                                                                               
C     . . . STEP 8 . . .                                                        
C                                                                               
C***********************************************************************        
      CALL TRGSA ( PP,FREQ,FHOUR,SX,NDR,INOBS,MAXLAG,M2,NIPQ,NV )               
C      TIME(7) = TTIME(0)                                                       
      CALL CSTAT2 (PP,OMEAN,OSD,OVAR,R,SIG,SX,SETS,THBAR,TZERO,                 
     * ICNTL,ITEST,KAY,M2,M4,NDEXM1,NDEXY,NDEXP1,NV,NCOL)                       
C      TIME(8) = TTIME(0)                                                       
      IF(ITEST .EQ. 1) GO TO 198                                                
C***********************************************************************        
C                                                                               
C     . . . STEP 9 . . .                                                        
C                                                                               
C***********************************************************************        
      CALL SCREEN (PP,SPEED,ABNAME,AEPOCH,AHSUBN,COLA,DELTT,                    
     * CUTOFF,EPOCH,HSUBN,ICNTL,ID,IDD,IHH,IMIN,IMM,INOBS,IYY,JR,               
     * K,KAPPA,MAXTRM,MCNST,MINTRM,M1,M2,NAME,NCOL,NCONST,NDEXM1,               
     * NDEXP1,NDEXP2,NDEXY,NDR,NORDER,NQP,NROW,NV,NYYYY,OMEAN,OSD,              
     * OVAR,P,QQ,RT,R1,SETS,SIG,SX,THBAR,TIMEZ,TSTORE,TZERO,YEPOCH,             
     * XLONG,YNODE)                                                             
C      TIME(11) = TTIME(0)                                                      
C************************************************************************       
C                                                                               
C     . . . STEP 10 . . .                                                       
C                                                                               
C*****************************************************************************  
C     CALL ONE80                                                                
C                                                                               
C     ANY LOCAL PROGRAMS TO SAVE RESULTS IN COMPUTER COMPATIBLE FORMAT.         
C     OR TO USE THE HARMONIC CONSTANTS FOR ADDITIONAL CALCULATIONS              
C     SHOULD BE CALLED HERE.                                                    
C                                                                               
C                                                                               
C     ALL FILES ESTABLISHED BY -LSQHA2- SHOULD BE CLOSED.                       
C                                                                               
      PRINT 196                                                                 
  196 FORMAT ('1',5X,'END OF OUTPUT FOR THIS JOB . . . . .THANK YOU')           
 198  CONTINUE                                                                  
C      TIME(12) = TTIME(0)                                                      
C      PRINT 770, (I,TIME(I),I=1,12)                                            
C 770  FORMAT (1H0,'TIME(',I2,')=',F8.4)                                        
  777 STOP                                                                      
      END                                                                       
      SUBROUTINE SNTAB2 ( NIPQ )
C  WRITTEN MARCH 1983
C...NOTE...DIMENSION OF SINE (WHICH IS 5*NIPQ) WILL HAVE TO BE MODIFIED         
C          IN -LSQHA2- IF NIPQ IS CHANGED TO PROVIDE GREATER OR LESS
C          ANGULAR RESOLUTION.
C________________________________________________________________________       
C
C  PURPOSE:
C    COMPUTE SINES AND CONSTRUCT A TABLE OF SINES IN FIVE QUADRANTS
C    WITH NIPQ INCREMENTS PER QUADRANT.  IT IS AN ITERATIVE PROCEDURE
C    USING THESE RELATIONSHIPS: SIN(X+Y)=SIN(X).COS(Y)+COS(X).SIN(Y),
C    COS(X+Y)=COS(X).COS(Y)-SIN(X).SIN(Y), AND SIN(PI/2-Y)=COS(Y)
C    TO CONSTRUCT THE FOLLOWING ITERATION SCHEME.
C______________________________________________________________________         
C
C  SUBROUTINE
C  VARIABLES
C  NIPQ     = NUMBER OF ANGULAR INCREMENTS PER QUADRANT.  INPUT.
C  DELANG   = INCREMENTAL ANGLE IN RADIANS
C  PI       = 3.1415927
C  SINE(I)  = SINE OF (I * DELANG)
C  DELAS    = SINE (DELANG)
C  DELAC    = COSINE (DELANG)
C                                                                               
C**********************************************************************         
C                                                                               
C     . . . STEP 1 . . .                                                        
C                                                                               
C**********************************************************************         
C                                                                               
      COMMON /TRIG/ SINE(1)                                                     
      NIPQM1 = NIPQ - 1                                                         
      NIPQND = (NIPQ/2) - 1                                                     
      DELANG = 3.1415927/(2*NIPQ)                                               
      DELAS  = SIN(DELANG)                                                      
      DELAC  = COS(DELANG)                                                      
      SINE(1)= DELAS                                                            
      SINE(NIPQM1) = DELAC                                                      
C                                                                               
C**********************************************************************         
C                                                                               
C     . . . STEP 2 . . .                                                        
C                                                                               
C  GENERATE FIRST QUADRANT SINE TABLE                                           
C                                                                               
C**********************************************************************         
C                                                                               
      DO 11 I=1,NIPQND                                                          
      SINE(I+1) = SINE(I)*DELAC + SINE(NIPQ-I)*DELAS                            
      SINE(NIPQM1-I) = SINE(NIPQ-I)*DELAC - SINE(I)*DELAS                       
   11 CONTINUE                                                                  
      SINE(NIPQ) = 1.0                                                          
C                                                                               
C**********************************************************************         
C                                                                               
C     . . . STEP 3 . . .                                                        
C                                                                               
C  GENERATE SECOND QUADRANT OF SINE TABLE                                       
C                                                                               
C**********************************************************************         
C                                                                               
      DO 45 J=1,NIPQ                                                            
      K=NIPQ+J                                                                  
      L=NIPQ-J                                                                  
   45 SINE(K)=SINE(L)                                                           
C  GENERATE THIRD AND FOURTH QUADRANTS                                          
      NIPQ2=NIPQ*2                                                              
      DO 50 J=1,NIPQ2                                                           
      K=NIPQ2+J                                                                 
   50 SINE(K)=SINE(J)*(-1.0)                                                    
C GENERATE FIFTH QUADRANT                                                       
      NIPQ4=NIPQ*4                                                              
      DO 55 J=1,NIPQ                                                            
      K=NIPQ4+J                                                                 
   55 SINE(K)=SINE(J)                                                           
C  OUTPUT STATEMENT                                                             
      PRINT 63, NIPQ
   63 FORMAT (/,' SINE TABLE GENERATED FOR FIVE QUADRANTS.',I5,' INCRE        
     *MENTS PER QUADRANT.') 
      RETURN               
      END                 
      SUBROUTINE REDAT2 (ICNTL, NDR, IYY, IMM, IDD, IHH, IMIN,                  
     * NOBS, MORE, JYY, JMM, JDD, JHH, JMIN, THBAR, TH,                         
     * XLONG, TIMEZ, NYYYY ) 
C_______________________________________________________________________        
C                           
C     1 DEC 83             
C                         
C     THIS SUBROUTINE WAS TRANSFERED FROM JACK'S ACCOUNT UNDER THE              
C     NAME -REDAT2.0-.  IT HAS BEEN RENAMED REDAT2P FOR PERMANENT               
C     COPY. COMMENT LINES CONCERNINGICNTL(9).EQ.0 HAVE BEEN REMOVED             
C                                                                               
C______________________________________________________________________         
C                                                                               
C  WRITTEN MAY 1983                                                             
C  PURPOSE:                                                                     
C     THIS SUBROUTINE WILL READ DATA STORED AS HOURLY HEIGHTS ON MAG-           
C  NETIC TAPE OR ON DISK AS CONTROLLED BY THE COMPUTER SYSTEM'S JOB             
C  CONTROL LANGUAGE.                                                            
C     NOTE . . . IT IS PLANNED TO EXPAND THIS SUBROUTINE TO PERMIT              
C  OPTIONAL READING OF SIX-MINUTE DATA.  ICNTL(9) = 0 WILL READ HOURLY          
C  HEIGHTS,  = 1 WILL READ SIX-MINUTE HEIGHTS.  UNTIL EXPANSION                 
C  ICNTL(9) MUST REMAIN = 0.                                                    
C_______________________________________________________________________        
C                                                                               
C  ESTABLISH TYPES AND DIMENSIONS                                               
C                                                                               
C     .  .  .  COMMON STATEMENTS  .  .  .                                       
      DIMENSION TH(1)                                                           
C      DIMENSION TRASH(200)                                                     
C      REAL TIME(15)                                                            
C                                                                               
C     .  .  .  DIMENSION STATEMENTS  .  .  .                                    
      DIMENSION IYY(1),IMM(1),IDD(1),IHH(1),IMIN(1),ICNTL(1)                    
C______________________________________________________________________         
C                                                                               
C  VARIABLES USED IN REDAT2                                                     
C                                                                               
C  SUBROUTINE                                                                   
C  VARIABLE                                                                     
C                                                                               
C     NDAYS   = NUMBER OF DAYS OF CONTINUOUS, WHOLE DAYS OF DATA TO BE          
C               READ. NOT BEING USED.                                           
C     NOBS    = NUMBER OF OBSERVATIONS (NUMBER OF DATA VALUES IN THE            
C               SERIES).  IF HOURLY DATA ARE USED NOBS = NDAYS * 24.            
C     JYY     = YEAR, 4 DIGITS                X                                 
C     JMM     = MONTH                          X  FIRST DATA                    
C     JDD     = DAY                             > SAMPLE OF                     
C     JHH     = HOUR                           X  SEQUENCE                      
C     JMIN    = MINUTE (IN TENTHS OF HOURS)   X                                 
C     TH(I)   = TIDAL HEIGHTS, I=1,NOBS                                         
C     IIDATE  = 6 DIGITS OF DATE INFORMATION READ AT DATA INPUT TIME            
C               TO VERIFY THAT DATA FOR THE PROPER TIME PERIOD WERE             
C               READ.                                                           
C     THBAR   = ESTIMATED MEAN TIDE LEVEL. CAN BE OBTAINED FROM TABULA-         
C               TION MEANS OR SUMMARY MEANS.  A GOOD ESTIMATE OF                
C               -THBAR- HAS ELIMINATED THE NEED FOR DOUBLE PRECISION            
C               IN MANY OTHER CALCULATIONS.                                     
C     XLONG     = LONGITUDE OF STATION (+ FOR WEST, - FOR EAST) TO              
C                 HUNDREDTHS OF A DEGREE.                                       
C     TIMEZ     = TIME ZONE OF STATION (+ FOR WEST, - FOR EAST) TO              
C                 HUNDREDTHS OF A DEGREE. REMEMBER, + IS ASSUMED                
C                 WHEN BLANK, BUT, - MUST BE USED WHEN REQUIRED.                
C                                                                               
C     IYY(NDR) =  :                                                             
C     IMM(NDR) =  :  THESE ARRAYS HOLD STARTING DATE AND TIME FOR EACH          
C     IDD(NDR) =  >  SET OF DATA WHEN MULTIPLE SETS ARE USED                    
C     IHH(NDR) =  :  TO ACCOUNT FOR BREAKS.                                     
C     IMIN(NDR) = :                                                             
C     NYY       = LAST 2 DIGITS OF YEAR FROM -NYYYY-, USED TO                   
C                 COMPARE WITH YEAR ( -IDATEY- ) OF INPUT DATA.                 
C______________________________________________________________________         
C                                                                               
C  SUBROUTINE BEGINS HERE                                                       
C______________________________________________________________________         
C                                                                               
C                                                                               
C**********************************************************************         
C                                                                               
C     . . . STEP 1 . . .                                                        
C                                                                               
C     READ CONTROL DATA                                                         
C                                                                               
C**********************************************************************         
C                                                                               
      READ (*,101) NOBS,MORE,JYY,JMM,JDD,JHH,JMIN,THBAR,XLONG,TIMEZ,
     * NSTA
  101 FORMAT(7I5,F5.2,2F6.2,A4)                                                 
      IYY(NDR) = JYY                                                            
      IMM(NDR) = JMM                                                            
      IDD(NDR) = JDD                                                            
      IHH(NDR) = JHH                                                            
      IMIN(NDR) = JMIN                                                          
C                                                                               
C     READ INPUT DATA AND ECHO PRINT FIRST AND LAST 48 DATA VALUES WITH         
C  DATES FOR VERIFICATION PURPOSES, AND TO CHECK THAT INPUT DATA YEAR           
C  AGREES WITH CONTROL PARAMETER -NYYYY-.                                       
C                                                                               
C  FOLLOWING STATEMENT FOR TEST PURPOSES ONLY                                   
C      TIME(2) = TTIME(0)                                                       
C                                                                               
C**********************************************************************         
C                                                                               
C     . . . STEP 2 . . .  HAS BEEN OMITTED                                      
C                                                                               
C**********************************************************************         
C                                                                               
C                                                                               
C**********************************************************************         
C                                                                               
C     . . . STEP 3 . . .                                                        
C                                                                               
C**********************************************************************         
C                                                                               
C     Must open the data file, hard code name for now.
      OPEN (11, FILE = '/users/bob/time.series/nos/nos.data',
     1  FORM='FORMATTED', STATUS='OLD')

      READ (11,15) ISTAP,ISTA,IDATFY,IDATF,(TH(I),I=1,12)                       
C  PRINT STATION NUMBER AND THE NUMBER OF OBSERVATIONS USED AS INPUT.           
      PRINT 10, ISTAP,ISTA,NOBS                                                 
  10  FORMAT (/,'STATION ID IS ',I3,'-',A4,' FOR THIS ANALYSIS.',             
     * '  NOBS =',I6,' DATA POINTS USED AS INPUT.')                             
      IF ( NDR .GT. 1 ) GO TO 30                                                
      IF ( NYYYY .EQ. 0 ) THEN                                                  
      PRINT 20                                                                  
      ELSE                                                                      
      NYY = MOD( NYYYY , 100 )                                                  
      IF ( IDATFY .NE. NYY ) THEN                                               
      PRINT 25, NYYYY                                                           
      GO TO 140                                                                 
      END IF                                                                    
      END IF                                                                    
      READ (11,16) (TH(I),I=13,NOBS-12)                                         
   30 READ (11,15) ISTAP,ISTA,IDATLY,IDATL,(TH(I),I=NOBS-11,NOBS)               
C  FOLLOWING STATEMENT FOR TESTING ONLY                                         
C      TIME(3) = TTIME(0)                                                       
C                                                                               
C**********************************************************************         
C                                                                               
C     . . . STEP 4 . . .                                                        
C                                                                               
C**********************************************************************         
C     This is the original format of the nos data
   15 FORMAT (12X,I3,A4,I2,I4,7X,12F4.2)                                        
C  15 FORMAT (I3, A4, I2, I4, 12F5.1)
   16 FORMAT ( 32X,12F4.2 )                                                     
      PRINT 35                                                                  
   35 FORMAT (/,'INPUT DATA - FIRST 48 DATA VALUES WITH FIRST DATE.')         
      PRINT 40, IDATFY,IDATF,(TH(I),I=1,48)                                     
   40 FORMAT (/,1X,I2,I4,3X,24F5.2,/,11X,24F5.2)                              
      PRINT  45                                                                 
   45 FORMAT (/,'LAST 48 DATA VALUES WITH LAST DATE:')                        
      PRINT 50, (TH(I),I=NOBS-47,NOBS-24)                                       
   50 FORMAT (/,10X,24F5.2)                                                   
      PRINT 55, IDATLY,IDATL,(TH(I),I=NOBS-23,NOBS)                             
   55 FORMAT (2X,I2,I4,3X,24F5.2)                                               
   20 FORMAT (/,' CONTROL PARAMETER NYYYY = 0.  THIS MEANS THAT NO ADJ        
     *USTMENT WILL BE MADE FOR NODE FACTORS OR EQUILIBRIUM ARGUMENTS.')         
   25 FORMAT (/,'YEAR IN CONTROL PARAMETER =',I5,'.  THIS DISAGREES WI        
     *TH YEAR OF INPUT DATA.  CHECK FOR ERROR.',/,/,'RUN TERMINATED.')        
C                                                                               
      RETURN                                                                    
  140 STOP                                                                      
      END                                                                       
      SUBROUTINE REDAT3 (TH,Z,V,THBAR,JYY,MINLAG,MV,NDEXY,                      
     *  NOBS,NRECRD,NTYPE,NV)                                                   
C_______________________________________________________________________        
C                                                                               
C     THIS IS A DUMMY ROUTINE TO BE USED WHEN MV = 0                            
C                                                                               
C     IT IS CALLED BY FILE NAME REDAT3.1                                        
C                                                                               
C     WRITTEN 21 NOVEMBER 1983                                                  
C                                                                               
C_______________________________________________________________________        
C                                                                               
      PRINT 10                                                                  
C                                                                               
   10 FORMAT (/, ' REDAT3.1 CALLED BUT CODE NOT FURNISHED, STANDARD           
     1 ANALYSIS IS BEING USED ')                                                
C                                                                               
      RETURN                                                                    
      END                                                                       
      SUBROUTINE MODT1 ( PP,FREQ,THETA,DELTT,FHOUR,SX,                          
     * TH,THBAR,V,Z,ICNTL,NDR,I1,JDAY,JMM,                                      
     * JDD,JHH,JMIN,LAGS,MAXLAG,M2,                                             
     * NCONST,NDEXY,NIPQ,NLAG,NOBS,NRECRD,NTYPE,NV )                            
C_______________________________________________________________________        
C                                                                               
C     1 DEC 83                                                                  
C     THIS SUBROUTINE WAS TRANSFERED FROM JACK'S FILE UNDER THE NAME            
C     -MODT1.0-.  THE NAME HAS BEEN CHANGED TO -MODT1P- FOR PERMANENT.          
C                                                                               
C_____________________________________________________________________________  
C                                                                               
C    WRITTEN MARCH 1983                                                         
C  PURPOSE:                                                                     
C     SUBROUTINE MODT1 (MODIFY DATA, OPTION 1) IS DESIGNED FOR THE              
C  ROUTINE ANALYSIS FOR ASTRONOMICAL TIDES OF HOURLY HEIGHTS, OR                
C  REGULAR SPACING OF OBSERVATIONS OTHER THAN HOURLY.                           
C     REGRESSION VECTORS ARE CONSTRUCTED IN THE FORM                            
C        X(1), X(2), X(3), . . ., X(NV), Y                                      
C  WHERE THE X(I) ARE TRIGONOMETRIC FUNCTIONS AND Y IS THE OBSERVED             
C  TIDE HEIGHT.  AFTER THE CONSTRUCTION OF EACH VALUE OF THE VECTOR             
C  SUMS AND SUMS-OF-PRODUCTS ARE ACCUMULATED. ONE OR MORE CALLS CAN             
C  BE MADE TO SUBROUTINE MODT1 IN THE ANALYSIS OF ANY TIDE RECORD.              
C  THIS PROVISION PERMITS BYPASSING DATA GAPS AND LARGE STORM TIDES.            
C                                                                               
C_______________________________________________________________________        
C                                                                               
C               DEFINITIONS                                                     
C                                                                               
C     JTEST NOT EQUAL TO ZERO.  INDICATES A NEGATIVE PHASE ANGLE.               
C            THIS IS IMPOSSIBLE IF CODE IS CORRECT.                             
C  +  NOBS    = NUMBER OF OBSERVATIONS IN THIS SET.  COMPUTED BY                
C              SUBROUTINE REDATA.                                               
C     SETS    = TOTAL NUMBER OF OBSERVATIONS TO BE CONSIDERED.                  
C                 IF THERE IS ONE SET OF INPUT DATA WITHOUT BREAKS              
C                 SETS WILL BE EQUAL TO NOBS.                                   
C     SX(I)   = SUM OF X(I) OVER ALL -I- AFTER ALL DATA ARE INCLUDED.           
C               SX(I) IS REPLACED BY THE MEAN VALUE OF X(I).                    
C                                                                               
C     JYY     = YEAR                                                            
C     JDAY(I) = NUMBER OF JULIAN DAYS -1 COMPLETED.  ?BLOCK DATA?               
C     JMONTH  = INDEX FOR JDAY TABLE.                                           
C  *  JMM     = MONTH OF THE YEAR.                                              
C  *  JDD     = DAY OF THE MONTH.                                               
C  *  JHH     = HOUR OF THE DAY (FROM 0 TO 23).                                 
C     JMIN    = MINUTE (IN TENTHS OF HOURS)                                     
C     HOUR    = (JULIAN HOUR - 1) OF THE FIRST OBSERVATION.                     
C **  NCONST  = NUMBER OF CONSTITUENTS CONSIDERED.                              
C     THETA(J) = THE PHASE ANGLE IN COMPUTATIONAL UNITS.                        
C  *  TH(I)   = OBSERVED TIDE HEIGHT.                                           
C     THBAR   = ESTIMATED MEAN TIDE LEVEL.                                      
C     V(J)    = REGRESSION VECTOR.                                              
C     FREQ(N) = FREQUENCY IN COMPUTATIONAL UNITS, THE CHANGE IN                 
C                ONE HOUR.                                                      
C     JTHETA  = INTEGER PORTION OF THETA - LOCATION OF THE DESIRED SINE         
C     TWOPI   = 2 TIMES PI.   ?BLOCK DATA?                                      
C                                                                               
C   * INPUT DATA SUPPLIED BY SUBROUTINE REDATA.                                 
C  ** INPUT DATA SUPPLIED BY LSQHA.                                             
C   + COMPUTED BY SUBROUTINE REDATA2.                                           
C  ++ COMPUTED BY LSQHA.                                                        
C                                                                               
C_______________________________________________________________________        
C                                                                               
C                                                                               
      REAL  Z(NTYPE,NRECRD), FHOUR(1)                                           
      REAL*8 PP(M2,M2)                                                          
      COMMON/TRIG/ SINE(5120)                                                   
      DIMENSION ICNTL(1), JDAY(1)                                               
      INTEGER NLAG(NTYPE,LAGS)                                                  
      DIMENSION TH(1),  FREQ(1), THETA(1),                                      
     *  V(1), SX(1)                                                             
C                                                                               
      DOUBLE PRECISION DTHETA,DNIPQ4, THETA, DUMY, FREQ                         
C                                                                               
C___________________________________________________________________________    
C                                                                               
C  INITIALIZE TEST FOR NEGATIVE ANGLES.  THIS TEST TO BE REMOVED                
C  AT THE END OF CHECKOUT.                                                      
C     JTEST = 0                                                                 
C                                                                               
C*************************************************************************      
C                                                                               
C     . . . STEP 1 . . .                                                        
C                                                                               
C INITIALIZE JULIAN HOUR COMPUTATION.                                           
C                                                                               
C*****************************************************************************  
C                                                                               
      JMONTH = JMM + 1                                                          
C     FOR HOURLY DATA, HOUR IS CALCULATED AS (JULIAN HOUR-1)                    
C     TO INITIALIZE FOR ROUTINE INCREMENTATION BY THE LOOP DO 100.              
      HOUR = ((JDAY(JMONTH)+JDD) * 24+JHH+JMIN/60.-1+MAXLAG)/DELTT              
      FHOUR(NDR) = HOUR                                                         
C  ONE TIME PERIOD IS SUBTRACTED TO INITIALIZE THE PHASE ANGLE                  
C  FOR COMPUTATION LOOP.                                                        
C                                                                               
C  INITIALIZE PHASE ANGLES.  REMEMBER THAT IN COMPUTATION UNITS                 
C  2*PI=4*NIPQ.                                                                 
      NIPQ4=4*NIPQ                                                              
      DO 25 J=1,NCONST                                                          
      DUMY = FREQ(J) * HOUR + 0.5                                               
      THETA(J) = DUMY                                                           
      NDUMY = INT(DUMY)                                                         
   25 JTHETA = MOD(NDUMY,NIPQ4)                                                 
C  ONE-HALF IS ADDED SO THAT ROUND DOWN IS CENTER OF INTERVAL.                  
C  ESTABLISH REGRESSION VECTOR.                                                 
      PRINT 5, I1,NOBS                                                          
 5    FORMAT(3X,'I1=',I4,'  NOBS=',I6,/)                                        
C                                                                               
C***************************************************************************    
C                                                                               
C     . . . STEP 2 . . .                                                        
C                                                                               
C***************************************************************************    
C                                                                               
      DO 125 I=I1,NOBS                                                          
C                                                                               
      V(NDEXY) = TH(I) - THBAR                                                  
C  ESTABLISH PERIODIC INDEPENDENT OBSERVATIONS IN REGRESSION VECTOR.            
      DO 100 J = 1,NV,2                                                         
C  UPDATE PHASE ANGLE FOR EACH CONSTITUENT.                                     
      N = (J + 1)/2                                                             
      DTHETA = THETA(N) + FREQ(N)                                               
      DNIPQ4=NIPQ4                                                              
      DTHETA = DMOD( DTHETA, DNIPQ4 )                                           
      THETA(N) = DTHETA                                                         
C                                                                               
C     JTHETA IS THE LOCATION OF THE SIN OR COS OF THETA.                        
      JTHETA = DTHETA                                                           
      IF (JTHETA.EQ.0) JTHETA = NIPQ4                                           
C  THE ABOVE INSTRUCTION COMPENSATES FOR NOT EMPLOYING                          
C  A ZERO INDEX FOR SINE OF ZERO.                                               
C     WRITE (6,32) JTHETA,IYE,N                                                 
C  32 FORMAT (1X,'ERROR IN COMPUTING PHASE ANGLE IN SUBROUTINE MODT1,           
C    1 CONSTITUENT NO. =',I6,'  I =',I6,'  N =',I6//)                           
C     GO TO 156                                                                 
C  ESTABLISH INDEPENDENT VARIABLES IN THE REGRESSION VECTOR,                    
C  V(2J) = V((J + 1)/2) = SINE OF PHASE ANGLE, V(2J) = COSINE OF                
C  PHASE ANGLE.                                                                 
C     V(J) = SIN(THETA)                                                         
C     V(J+1) = COS(THETA)                                                       
C                                                                               
C     IF ICNTL(2) .EQ. 2, THEN NIPQ MUST = 90.                                  
C     THE SYSTEM FUNCTIONS WILL BE USED IN PLACE OF THE SINE TABLE.             
C                                                                               
      IF(ICNTL(2) .EQ. 2) THEN                                                  
      V(J) = DSIN(DTHETA)                                                       
      V(J+1) = DCOS(DTHETA)                                                     
      ELSE                                                                      
      V(J) = SINE (JTHETA)                                                      
      K = JTHETA + NIPQ                                                         
      V(J+1) = SINE(K)                                                          
      END IF                                                                    
C                                                                               
  100 CONTINUE                                                                  
C                                                                               
C****************************************************************************** 
C                                                                               
C     . . . STEP 3 . . .                                                        
C                                                                               
C****************************************************************************** 
C                                                                               
      IF ( ICNTL(10) .EQ. 0 ) GO TO 110                                         
      CALL MODT2 (V,Z,I,LAGS,NLAG,NDEXY,NRECRD,NV,MAXLAG,NTYPE)                 
C                                                                               
C*****************************************************************************  
C                                                                               
C     . . . STEP 4 . . .                                                        
C                                                                               
C     FORM THE SUMS OF ALL NON-PERIODIC VARIABLES.                              
C                                                                               
C****************************************************************************** 
C                                                                               
  110 DO 162 J = NV+1,NDEXY                                                     
      SX(J) = SX(J) + V(J)                                                      
C     FORM THE SUM OF CROSS PRODUCTS OF DEPENDENT AND                           
C     INDEPENDENT VARIABLES.                                                    
      DO 161 K=1,J                                                              
  161 PP(K,J) = PP(K,J) + V(K) * V(J)                                           
  162 CONTINUE                                                                  
C                                                                               
C  THE FOLLOWING IF - PRINT STATEMENT IS USED ONLY FOR TESTING.                 
C     IF ( I .LE. I1+3 ) PRINT 165, (V(J),J=1,NDEXY)                            
C 165 FORMAT (1H0,'TEST V(J):',/,(1X,10F12.5,/))                                
C                                                                               
  125 CONTINUE                                                                  
C                                                                               
C                                                                               
      RETURN                                                                    
      END                                                                       
      SUBROUTINE MODT2 (V,Z,I,LAGS,NLAG,NDEXY,NRECRD,NV,                        
     *  MAXLAG,NTYPE)                                                           
C__________________________________________________________________________     
C                                                                               
C     THIS IS A DUMMY ROUTINE TO BE USED WHEN                                   
C                                                                               
C     IT IS CALLED BY FILE NAME MODT2.1                                         
C                                                                               
C     WRITTEN 21 NOVEMBER 1983                                                  
C                                                                               
C_______________________________________________________________________        
C                                                                               
      PRINT 10                                                                  
C                                                                               
   10 FORMAT (/, 'MODT2.1 CALLED, BUT DATA AND CODE NOT FURNISHED,            
     1 STANDARD ANALYSIS BEING USED.' )                                         
C                                                                               
      RETURN                                                                    
      END                                                                       
      SUBROUTINE CSTAT2 (PP,OMEAN,OSD,OVAR,R,SIG,SX,SETS,THBAR,TZERO,           
     * ICNTL,ITEST,KAY,M2,M4,NDEXM1,NDEXY,NDEXP1,NV,NCOL)                       
C                                                                               
C_______________________________________________________________________        
C                                                                               
C     1 DECEMBER 1983                                                           
C                                                                               
C     LABEL:  CSTAT2T                                                           
C                                                                               
C     PURPOSE:  THIS A MODIFICATION OF CSTAT2P TO TEST THE STABILITY            
C               IMPROVEMENT OBTAINED BY WORKING WITH THE CORRELATION            
C               MATRIX RATHER THAN THE COVARIANCE MATRIX.                       
C_______________________________________________________________________        
C                                                                               
C  WRITTEN MAY 1983                                                             
C                                                                               
C  PURPOSE:                                                                     
C     SUBROUTINE CSTAT2 COMPUTES THE FOLLOWING STATISTICAL VALUES:              
C       MEAN                                                                    
C       STANDARD DEVIATION                                                      
C       CORRELATION COEFFICIENTS BETWEEN SPECIFIED VARIABLES                    
C                                                                               
C                                                                               
C                                                                               
C  THE FOLLOWING ITEMS WILL BE COMPUTED FOR OUTPUT:                             
C     OVAR   = OBSERVED VARIANCE                                                
C     OMEAN  = OBSERVED MEAN                                                    
C     OSD    = STANDARD DEVIATION OF THE RECORD                                 
C     KAY(I) = AN ARRAY FOR INDEXING OUTPUT.                                    
C     R(I)   = CORRELATION COEFFICIENT                                          
C     SIG(I) = STANDARD DEVIATION OF THE CROSS PRODUCT MATRIX                   
C     SX(L)  = THE SUMS OF ALL VARIABLES, REPLACED BY MEANS                     
C     PP(L,L) = INITALLY THE SUMS OF CROSS PRODUCTS, REPLACED BY                
C               CROSS PRODUCTS WITH THE MEANS REMOVED                           
C                                                                               
C________________________________________________________________________       
C                                                                               
C  THIS SUBROUTINE USES THE RELATION                                            
C                                                                               
C       SUM(X-XBAR)(Y-YBAR) = SUM(X*Y) - SETS * XBAR * YBAR                     
C                                                                               
C  WHERE -SETS- IS THE NUMBER OF PAIRED OBSERVATIONS, -XBAR- AND -YBAR-         
C  ARE THE MEAN VALUES OF X AND Y.  TO REMOVE THE MEANS FROM ALL CROSS          
C  PRODUCTS, MEANS AND STANDARD DEVIATIONS ARE COMPUTED AND MAY BE              
C  PRINTED IF DESIRED.  THE CORRELATION MATRIX MAY BE COMPUTED AND              
C  PRINTED ALSO.                                                                
C                                                                               
C_______________________________________________________________________        
C                                                                               
C      . . . DIMENSION STATEMENT  .  .  .                                       
C                                                                               
      REAL *8 PP(M2,M2)                                                         
      REAL SIG(M2),R(M2),SX(M2)                                                 
      INTEGER ICNTL(1),KAY(1)                                                   
C___________________________________________________________________________    
C                                                                               
      PRINT 10,(PP(N,N),N=NV+1,NDEXY)                                           
   10 FORMAT(/,' FROM CSTAT, PP(N,N)=',/,10F12.4)                             
      PRINT 20, SETS,THBAR,M2,M4,NDEXY                                          
   20 FORMAT (/,'SETS=',F6.0,'THBAR=',F8.4,' M2=',I4,' M4=',                  
     * I4,' NDEXY=',I4,/)                                                       
C                                                                               
C****************************************************************************** 
C                                                                               
C     . . . STEP 1 . . .                                                        
C                                                                               
C     COMPUTE MEANS                                                             
C                                                                               
C*****************************************************************************  
C                                                                               
      DO 30 I = 1,NDEXY                                                         
      KAY(I) = I                                                                
   30 SX(I) = SX(I)/SETS                                                        
      DO 50 I = 1,NDEXY                                                         
      DO 40 J = I,NDEXY                                                         
      PP(I,J) = PP(I,J) - SETS * SX(I) * SX(J)                                  
 40   CONTINUE                                                                  
 50   CONTINUE                                                                  
C                                                                               
C     CORRECT CROSS PRODUCTS FOR MEANS, COMPLETE THE CROSS PRODUCT MATRIX,      
C     AND COMPUTE THE STANDARD DEVIATION.                                       
C                                                                               
C     FORM THE CORRELATION MATRIX, IF DESIRED, AND COMPLETE THE LOWER           
C     TRIANGULAR MATRIX.                                                        
C                                                                               
C**************************************************************************     
C                                                                               
C     . . . STEP 2 . . .                                                        
C                                                                               
C     FORM STANDARD DEVIATIONS OF ALL VARIABLES                                 
C                                                                               
C*****************************************************************************  
C                                                                               
      DO 60 I = 1,NDEXY                                                         
      IF (PP(I,I) .LE. TZERO) THEN                                              
      PRINT 70, I,PP(I,I)                                                       
   70 FORMAT (/,'IN SUBROUTINE CSTAT2 WITH I =',I4,', PP(I,I) = '             
     * ,/)                                                                      
      PP(I,I) = .000001                                                         
      ITEST = 1                                                                 
      END IF                                                                    
      SIG(I) = DSQRT(PP(I,I)/SETS)                                              
 60   CONTINUE                                                                  
C                                                                               
      OVAR  = PP(NDEXY,NDEXY)/SETS                                              
      OMEAN = SX(NDEXY) + THBAR                                                 
      OSD   = SIG(NDEXY)                                                        
C                                                                               
C****************************************************************************   
C                                                                               
C     . . . STEP 3                                                              
C                                                                               
C     COMPUTE CORRELATION MATRIX                                                
C     COMPLETE THE LOWER TRIANGULAR MATRIX                                      
C                                                                               
C***************************************************************************    
C                                                                               
      DO 100 I = 1,NDEXY                                                        
      DO 80 J = I,NDEXY                                                         
C                                                                               
C                                                                               
      IF (ICNTL(5) .EQ. 1) PP(I,J)=PP(I,J)/(SIG(I)*SIG(J)*SETS)                 
   80 CONTINUE                                                                  
C                                                                               
  100 CONTINUE                                                                  
C                                                                               
      DO 120 I = 2,NDEXY                                                        
      DO 110 J = 1,I-1                                                          
      PP(I,J) = PP(J,I)                                                         
  110 CONTINUE                                                                  
  120 CONTINUE                                                                  
C                                                                               
C                                                                               
      IF (ICNTL(4) .EQ. 0) GO TO 150                                            
C                                                                               
C**********************************************************************         
C                                                                               
C     . . . STEP 4 . . .                                                        
C                                                                               
C     PRINT MEAN AND STANDARD DEVIATIONS IF THESE ARE WANTED.                   
C                                                                               
C**********************************************************************         
C                                                                               
      PRINT 130                                                                 
      PRINT 140, (KAY(I),SX(I),SIG(I),I=1,NDEXY)                                
 130  FORMAT('1',2X,'VARIABLE NO.',5X,'MEAN VALUE',5X,'STANDARD ',              
     *'DEVIATIONS',15X,'VARIABLE NO.',5X,'MEAN VALUE',5X,'STANDARD ',           
     *'DEVIATIONS',/)                                                           
 140  FORMAT(5X,I4,11X,F8.5,13X,F9.5,24X,I4,11X,F8.5,13X,F9.5)                  
C                                                                               
C****************************************************************************   
C                                                                               
C     . . . STEP 5 . . .                                                        
C                                                                               
C     COMPUTE AND PRINT TABLE OF CORRELATION COEFFICIENTS,                      
C     IF THESE ARE WANTED.                                                      
C                                                                               
C*******************************************************************************
C                                                                               
C                                                                               
  150 IF (ICNTL(5).EQ.0 .AND. ICNTL(7) .EQ. 1) THEN                             
      NCOL = 15             
      NP1 = NDEXY            
 160  NP2 = NP1 - NCOL+1      
      PRINT 170, ( KAY(N),N=NP1,NP2,-1 )                                        
  170 FORMAT ('1','CORRELATION COEFFICIENTS BETWEEN INDICATED VARIABLES'        
     *,/,(' ',7X,15(I5,3X)),//)
      IF(NP2 .LT. 1) NP2 = 1 
      N2 = NP1 + 1                                                              
      DO 200 I = 1,NP1                  
      N = N2 - I                       
      JONE = I                        
      IF(I .GT. NCOL) JONE = NCOL    
      IF(JONE .GT. NCOL) JONE=NCOL  
      DO 180 J = 1,JONE            
      M = N2 - J                  
      R(J)=PP(N,M)/(SIG(N)*SIG(M)*SETS)
 180  CONTINUE                        
      PRINT 190, N,(R(L),L=1,JONE)   
 190  FORMAT(' ',I4,3X,15F8.4)      
 200  CONTINUE                     
      IF(NP2 .EQ. 1) GO TO 210    
      NP1 = NP1 - NCOL           
      GO TO 160                 
C                              
      END IF                  
C                            
C     PRINT 205, ((PP(I,J) J=41,44) I=J,44)                                     
C 205 FORMAT ('  FROM CSTAT',/,4F12.6,/)                                    
C                                                                               
  210 RETURN                                                                    
      END                                                                       
      SUBROUTINE PMATRX (PP,M2,NDEXM1,NDEXY,NDEXP1,NSTEP,MATYP)                 
C                                                                               
C_________________________________________________________________________      
C                                                                               
C  WRITTEN OCTOBER 1983                                                         
C                                                                               
C  PURPOSE:                                                                     
C                                                                               
C     SUBROUTINE -PMATRX- IS CALLED BY SUBROUTINE -SCREEN-.                     
C  IT PRINTS THE CROSS PRODUCT MATRIX FORMED BY -LSQHA2- OR AS RE-              
C  ARRANGED BY -SCREEN-, 10 COLUMNS TO THE PAGE AS NEEDED TO DISPLAY THE        
C  MATRIX IN STANDARD FORM.  IT IS ANTICIPATED THAT THIS SUBROUTINE             
C  WILL ONLY BE USED FOR TRAINING OR TROUBLESHOOTING.                           
C                                                                               
C          MATYP = 0 - ORIGINAL MATRIX                                          
C                = 1 - REARRANGED MATRIX                                        
C                = 2 - SOLVED FOR ONE VARIABLE                                  
C                = 3 - SOLVED FOR THE SECOND VARIABLE                           
C_____________________________________________________________________________  
C                                                                               
C  .  .  .  DIMENSION AND DECLARATION STATEMENTS  .  .  .                       
C                                                                               
      REAL *8 PP(M2,M2)                                                         
                                                                                
C___________________________________________________________________________    
C                                                                               
C  .  .  . SUBROUTINE BEGINS HERE  .  .  .                                      
C__________________________________________________________________________     
C                                                                               
C     DETERMINE THE NUMBER OF PAGES NEEDED.                                     
      NPAGE = NDEXY/10 + 1                                                      
      IF ( NDEXM1 .LT. NDEXY ) NPAGE = NDEXM1/10 + 1                            
      IF ( NDEXM1 .EQ. 10 ) NPAGE = 1                                           
C                                                                               
      J1 = -9                                                                   
      DO 40 J = 1,NPAGE                                                         
      J1 = J1 + 10                                                              
      J2 = J1 + 9                                                               
      IF ( J2 .GT. NDEXM1 ) J2 = NDEXM1                                         
C                                                                               
C        PRINT PAGE HEADER                                                      
C                                                                               
      PRINT 10, NSTEP,MATYP,J,NPAGE                                             
   10 FORMAT ('1','CROSS PRODUCT MATRIX, STEP',I4,' MATRIX TYPE',I4,            
     * '   PAGE NO.',I3,'  OF',I3,/)                                            
C                                                                               
C        LABEL COLUMNS.                                                         
C                                                                               
      PRINT 15,(I,I=J1,J2)                                                      
   15 FORMAT (/,'LINE',120X,'VAR.',/,' NO.',5X,I4,9(8X,I4),                   
     * 5X,'NO.',/) 
      DO 30 M = 1,NDEXY 
        PRINT 20, M,(PP(M,N),N=J1,J2),PP(M,NDEXP1)
   20   FORMAT (1X,I3,10F12.5,F5.0)              
   30 CONTINUE 
   40 CONTINUE
      RETURN 
      END   
      SUBROUTINE OUTPUT (PP,SPEED,ABNAME,AEPOCH,AHSUBN,COLA,DELTT,              
     * EPOCH,HSUBN,ICNTL,ID,IDD,IHH,IMIN,IMM,INOBS,IYY,K,KAPPA,                 
     * KSTORE,MCNST,M1,M2,NAME,NCONST,NDEXM1,NDEXP1,NDEXP2,                     
     * NDEXY,NDR,NORDER,NYYYY,OMEAN,OSD,OVAR,P,RT,R1,SETS,SIG,                  
     * SX,THBAR,TIMEZ,TZERO,XLONG,YEPOCH,YNODE)                                 
C                                                                               
C_______________________________________________________________________        
C                                                                               
C     1 DEC 83                                                                  
C                                                                               
C     LABEL:  -OUTPUTT-                                                         
C                                                                               
C     THIS IS A TEMPORARY FILE IN WHICH THE INDICATED CHANGES PERMIT            
C     CALCULATION OF REGRESSION COEFFICIENTS FROM THE CORRELATION               
C     MATRIX.  THIS IS EXPECTED TO IMPROVE STABILITY BY DECREASING THE          
C     FREQUENCY OF UNDERFLOW.                                                   
C                                                                               
C_______________________________________________________________________        
C                                                                               
C  CREATED JULY 1983                                                            
C                                                                               
C  PURPOSE:                                                                     
C        THIS SUBROUTINE -OUTPUT- SETS UP OUTPUT FIELDS FOR PRINTING.           
C  IT BEGINS WITH THE CALCULATIONS OF VALUES NEEDED FOR THE HEADER              
C  LINE.                                                                        
C                                                                               
C        SUBROUTINE                                                             
C        VARIABLES                                                              
C                                                                               
C        ( ADD THEM HERE )                                                      
C                                                                               
C                                                                               
C        - - - DIMENSION STATEMENTS - - -                                       
C                                                                               
      REAL *8 PP(M2,M2),SPEED(1),A,B,FPOCH,TEMP                                 
      REAL SX(1),YNODE(1),YEPOCH(1),HSUBN(1),KAPPA(1),                          
     * EPOCH(1),AHSUBN(1),AEPOCH(1),COLA(1),ABNAME(1),                          
     * P(1),R1(1),RT(1),SIG(1)                                                  
         INTEGER INOBS(1),IYY(1),IMM(1),IDD(1),IHH(1),IMIN(1),                  
     * MCNST(1),NAME(1),NORDER(1),ICNTL(1)                                      
         CHARACTER *80 ID(4)                                                    
C                                                                               
C        SUBROUTINE BEGINS HERE                                                 
C                                                                               
C---------------------------------------------------------                      
C                                                                               
C       STEP 1                                                                  
C                                                                               
C------------------------------------------------------------                   
C                                                                               
      DZERO=DBLE(TZERO)                                                         
      MVAR = PP(1,NDEXP2)                                                       
      EMEAN = THBAR + SX(NDEXY)                                                 
      CONV = 180/3.1415927                                                      
C     DO 150 N = 1, K                                                           
C     NX = PP(N,NDEXP1)                                                         
C     A = PP(N,NDEXY)*SX(NX)                                                    
C     IF(ICNTL(5) .EQ. 1) A=A*SIG(NDEXY)/SIG(N)                                 
C 150 EMEAN = EMEAN - A                                                         
      IF(MVAR.NE.2) GO TO 151                                                   
C 150 EMEAN = EMEAN - PP(K+1,NDEXY)*SX(NX+1)                                    
  151 TEMP=PP(NDEXY,NDEXY)                                                      
      IF(ICNTL(5) .EQ. 0) THEN                                                  
      CVAR = SNGL(TEMP)/SETS                                                    
      ELSE                                                                      
      CVAR = SNGL(TEMP)*OVAR                                                    
      END IF                                                                    
C                                                                               
C      IF(CVAR.LT.TZERO) PRINT 154, K,N,PP(NDEXY,NDEXY),SETS,CVAR,              
C     * PP(K+1,NDEXP1)                                                          
C 154  FORMAT(/,'CVAR < TZERO',2I5,4F10.5,/)                                  
      IF(CVAR.LT.0.) CVAR = 0.                                                  
      ESD = SQRT(CVAR)                                                          
C                                                                               
C     PRINT OUTPUT TABLE HEADER                                                 
      NSETS = SETS                                                              
      PRINT 183                                                                 
      PRINT 153, NSETS                                                          
  153 FORMAT (/,' ANALYSIS BASED ON',I6,' OBSERVATION POINTS AS INDICA        
     *TED BELOW',/)                                                             
      PRINT 157, (INOBS(I),DELTT,IYY(I),IMM(I),IDD(I),IHH(I),IMIN(I),           
     * I=1,NDR)                                                                 
      PRINT 190, (ID(I),I=1,4)                                                  
  157 FORMAT (1X,I5,' OBSERVATIONS AT INTERVALS OF',F5.2,' HOURS  ',            
     * ' YEAR=',I5,' MONTH=',I3,' DAY=',I3,' HOUR=',I2,' MIN=',I3,/)            
      PRINT 162, OMEAN,OVAR,OSD,EMEAN,CVAR,ESD                                  
  162 FORMAT ( /,' OBSERVED MEAN =',F6.3,' FT.  OBSERVED VARIANCE =',         
     * F11.6,' SQ FT.  OBSERVED STANDARD DEVIATION =',F11.3,' FT.',/,           
     * ' CONSTANT TERM IN THE REGRESSION EQUATION =',F9.3,' FT.  RESIDUA        
     *L VARIANCE =',F11.6,' SQ FT.',/,' STANDARD DEVIATION OF THE RESIDU        
     *AL =',F11.3,' FT.',//)                                                    
      J = 0                                                                     
      MVAR = 1                                                                  
      PRINT 172                                                                 
  172 FORMAT (/ ,'CONSTITUENT  ----- ADJUSTED FOR A STANDARD ',                
     * 'YEAR ---- * CONSTITUENT R-SQUARE THIS R-SQUARE THRU  ',                 
     * 'SELEC-  *   -UNADJUSTED VALUES-',/,' NUM. NAME    AMPLITUDE',           
     * '   KAPPA    DELK - K     K     *    SPEED      CONSTITUENT ',           
     * 'THIS LEVEL OF   TION   *   AMPLITUDE   PHASE',/,16X,'(FEET)',           
     * '  (DEGREES) (DEGREES) (DEGREES) *   (DEG/HR)    ONLY (1)   ',           
     * ' SCREENING (2)  NUMBER  *     (FEET)  (DEGREES)',///)                   
C                                                                               
C*********************************************************************          
C                                                                               
C      STEP 2                                                                   
C                                                                               
C*********************************************************************          
C                                                                               
      DO 212 N = 1,K                                                            
      IF(MVAR .EQ. 2) THEN                                                      
      MVAR = 1                                                                  
      GO TO 212                                                                 
      ELSE                                                                      
      J = J + 1                                                                 
      TEMP = PP(N,NDEXP1)                                                       
      TERMN=SNGL(TEMP)                                                          
      NTERM=INT(TERMN)                                                          
      IF(PP(N,NDEXP2).EQ.2.0D0) THEN                                            
C     THE PREDICTOR JUST SELECTED IS PERIODIC                                   
      MVAR = 2                                                                  
C                                                                               
      IF(ICNTL(5) .EQ. 0) THEN                                                  
      A = PP(N,NDEXY)                                                           
      B = PP(N+1,NDEXY)                                                         
      ELSE                                                                      
C_______________________________________________________________________        
C                                                                               
C     THE FOLLOWING INSERT IS INTENDED TO ELIMINATE                             
C     DIVIDE CHECK AND OVERFLOW PROBLEMS IN THE FOLLOWING                       
C     CALCULATIONS.                                                             
C                                                                               
      IF (ABS(PP(N,NDEXY)) .LT. DZERO .OR. ABS(PP(N+1,NDEXY))                   
     * .LT. DZERO .OR. SIG(N) .LT. TZERO .OR. SIG(N+1) .LT. TZERO)              
     * THEN                                                                     
      PRINT 400, J,K,N,NDEXY                                                    
  400 FORMAT('  J=',I4,' K=',I4,' N=',I4,' NDEXY=',I4,/)                     
C                                                                               
      PRINT 410, PP(N,NDEXY),PP(N+1,NDEXY),SIG(N),SIG(N+1)                      
  410 FORMAT ('    POTENTIAL ERROR IN SUBROUTINE OUTPUT ',/,                   
     * ' PP(N,NDEXY),PP(N+1,NDEXY),SIG(N),SIG(N+1) ARE ',/,                     
     * 4E12.6,/)                                                                
C                                                                               
      A = 1.0D0                                                                 
      B = 1.0D0                                                                 
      GO TO 420                                                                 
      END IF                                                                    
C                                                                               
C_______________________________________________________________________        
      A1=SIG(NDEXY)/SIG(N)                                                      
      B1=SIG(NDEXY)/SIG(N+1)                                                    
      A=PP(N,NDEXY)*DBLE(A1)                                                    
      B=PP(N+1,NDEXY)*DBLE(B1)                                                  
      END IF                                                                    
  420 TEMP = DSQRT(A*A + B*B)                                                   
      HSUBN(J)=SNGL(TEMP)                                                       
      FPOCH = DATAN2(A,B)                                                       
      EPOCH(J) = SNGL(FPOCH)*CONV                                               
C                                                                               
      TEMP = PP(N+1,NDEXP1)                                                     
      CNSTN=SNGL(TEMP)                                                          
      NCNST=INT(CNSTN)/2                                                        
      MCNST(J) = NCNST                                                          
      IF ( EPOCH(J) .LT. 0. ) EPOCH(J) = EPOCH(J) + 360.                        
C                                                                               
C     MAKE ADJUSTMENTS FOR A STANDARD YEAR, IF THESE ARE WANTED.                
C  THAT IS TO SAY, APPLY EQUILIBRIUM ARGUMENTS AND NODE FACTORS.                
      IF ( NYYYY .EQ. 0 ) GO TO 196                                             
      AHSUBN(J) = HSUBN(J) / YNODE(NCNST)                                       
      AEPOCH(J) = EPOCH(J) + YEPOCH(NCNST)                                      
C * * * * * * * * * * *                                                         
C  TEMPORARY PRINT STATEMENT                                                    
C                                                                               
      IF (AEPOCH(J) .LT. 0.) PRINT 500, NAME(NCNST),AEPOCH(J)                   
  500 FORMAT (1X,'TEMPORARY PRINT OF ',A4,' WITH AEPOCH =',                     
     *        F10.2,' BEFORE ADDING 360 DEGREES.')                              
C                                                                               
C * * * * * * * * * *                                                           
      IF ( AEPOCH(J) .LT. 0. ) AEPOCH(J) = AEPOCH(J) + 360.                     
      IF ( AEPOCH(J) .GE. 360. ) AEPOCH(J) = AEPOCH(J) - 360.                   
196   TEMP=SPEED(NCNST)                                                         
      COLA(J) = P(NCNST)*XLONG - SNGL(TEMP)*TIMEZ/15.                           
      DOLA = COLA(J)                                                            
      COLA(J) = AMOD( COLA(J),360. )                                            
      KAPPA(J) = AEPOCH(J) - COLA(J)                                            
      PRINT 175, NCNST,NAME(NCNST),AHSUBN(J),KAPPA(J),COLA(J),AEPOCH(J),        
     * SPEED(NCNST),R1(NCNST),RT(J),NORDER(J),HSUBN(J),EPOCH(J)                 
  175 FORMAT (1X,I3,2X,A4,F12.4,3F10.2,'  *',F12.7,2F13.6,I8,'    *',           
     * F11.4,F9.2)                                                              
      ELSE                                                                      
C  THE PREDICTOR JUST SELECTED IS NON-PERIODIC.                                 
      TEMP = PP(N,NDEXY)                                                        
      HSUBN(J)=SNGL(TEMP)                                                       
C                                                                               
C     IF(ICNTL(5) .EQ. 1) HSUBN(J) = HSUBN(J)                                   
C                                                                               
      TEMP=PP(N,NDEXP1)                                                         
      CNST=SNGL(TEMP)                                                           
      NCNST=INT(CNST)-NCONST                                                    
      MCNST(J) = NCNST                                                          
      PRINT 177, NCNST,ABNAME(NCNST),R1(NCNST),RT(J),NORDER(J),                 
     * HSUBN(J),EPOCH(J)                                                        
  177 FORMAT (1X,I3,2X,A4,11X,'NON-PERIODIC VARIABLE',12X,'*',12X,              
     * 2F13.6,I7,'     *',F12.4,F9.2)                                           
      END IF                                                                    
      END IF                                                                    
 212  CONTINUE                                                                  
      PRINT 180                                                                 
  180 FORMAT (/, '(1) R1 IS THE SQUARE MULTIPLE CORRELATION COEFFICIE',        
     *'NT BETWEEN THE TIDE AND THIS CONSTITUENT.',/,' (2) RT IS THE SQ',        
     *'UARE OF THE MULTIPLE CORRELATION COEFFICIENT BETWEEN THE TIDE ',         
     *'AND ALL CONSTITUENTS THUS FAR SELECTED.',/,'     EACH NUMBER IS',        
     * ' PRINTED WITH AT LEAST ONE DIGIT WHICH IS BELIEVED TO BE ',             
     * 'INSIGNIFICANT.')                                                        
C     *********   TO BE CHECKED OUT LATER    **************                     
      IF(K .EQ. 1) GO TO 200                                                    
C                                                                               
C*********************************************************************          
C                                                                               
C               STEP 3                                                          
C                                                                               
C*********************************************************************          
C                                                                               
C     REARRANGE THE OUTPUT IN STANDARD ORDER.                                   
C                                                                               
      IF (KSTORE .LT. 27) GO TO 192                                             
      PRINT 183 
  183 FORMAT('1')
C 186 PRINT 190, (ID(I),I=1,4)
  190 FORMAT (1X,A80)    
      PRINT 153, NSETS  
      PRINT 157, (INOBS(I),DELTT,IYY(I),IMM(I),IDD(I),IHH(I),IMIN(I),           
     * I=1,NDR)        
      PRINT 190, (ID(I),I=1,4)                                                  
      PRINT 162, OMEAN,OVAR,OSD,EMEAN,CVAR,ESD                                  
  192 PRINT 172       
C                    
      DO 195 N = 1,NDEXM1
      DO 193 L = 1,NDEXM1
      IF(MCNST(L).NE.N) GO TO 193 
      IF(PP(N,NDEXP2) .EQ. 2) THEN
C     PREDICTOR IS PERIODIC      
      NCNST = MCNST(L)          
C                              
      PRINT 175, MCNST(L),NAME(NCNST),AHSUBN(L),KAPPA(L),COLA(L),               
     * AEPOCH(L),SPEED(NCNST),R1(NCNST),RT(L),NORDER(L),HSUBN(L),               
     * EPOCH(L)                                                                 
      ELSE                                                                      
C     PREDICTOR IS NON PERIODIC                                                 
      NCNST = PP(N,NDEXP1) - NCONST                                             
      PRINT 177, NCNST,ABNAME(NCNST),R1(NCNST),RT(L),NORDER(L),HSUBN(L),        
     * EPOCH(L)                                                                 
      END IF                                                                    
      GO TO 195                                                                 
193   CONTINUE                                                                  
  195 CONTINUE                                                                  
      PRINT 180                                                                 
  200 RETURN                                                                    
      END                                                                       
      SUBROUTINE MATCOR(PP,CUTOFF,JR,M2,NCOL,NDEXY,NDEXP1,NROW,NSTEP,           
     * MATYP)                                                                   
C_______________________________________________________________________        
C                                                                               
C     FILE NAME:     MATCORTT                                                   
C                                                                               
C     WRITTEN:     JANUARY 1984                                                 
C                                                                               
C     PURPOSE:                                                                  
C                                                                               
C     SUBROUTINE MATCOR IS CALLED BY SUBROUTINE SCREEN TO DISPLAY THE           
C     ORIGINAL CORRELATION MATRIX, AND ALSO BY SCREEN TO DISPLAY                
C     THE MATRIX AS MODIFIED BY THE SOLUTION ALGORITHM.  CORRELATION            
C     COEFFICIENTS ARE MULTIPLIED BY 1,000,000 TO ELIMINATE UNNEEDED            
C     ZEROS AND DECIMALS.  OUTPUT CAN BE LIMITED TO NXN COLUMNS AND             
C     ROWS, WHERE N IS SPECIFIED BY NCOL.  IT IS ANTICIPATED THAT THIS          
C     SUBROUTINE WILL BE USED ONLY FOR TRAINING AND UNSTANDARD ANALYSES.        
C                                                                               
C_______________________________________________________________________        
C                                                                               
      REAL *8 PP(M2,M2)                                                         
      DIMENSION JR(1)                                                           
C                                                                               
C_________________________________________________________________________      
C                                                                               
C*********************************************************************          
C                                                                               
C              STEP 1                                                           
C                                                                               
C***********************************************************************        
C                                                                               
      NDEXP2 = NDEXP1 + 1                                                       
      IF (NCOL .GT. NDEXY) NCOL = NDEXY                                         
      NPAGE = NCOL/15                                                           
      IF (NPAGE*15 .LT. NCOL) NPAGE=NPAGE+1                                     
      J2 = 0                                                                    
      IF (NPAGE .EQ. 0 .OR. NCOL .LE. 14) GO TO 170                             
C                                                                               
C***********************************************************************        
C                                                                               
C              STEP 2 - A                                                       
C                                                                               
C*********************************************************************          
C                                                                               
      DO 160 I=1,NPAGE                                                          
      J1 = J2 + 1                                                               
      J2 = J1 + 14                                                              
      IF (J2 .GE. NCOL) J2 = NCOL                                               
C                                                                               
C     PRINT PAGE HEADER                                                         
C                                                                               
      PRINT 110, NSTEP,MATYP,I                                                  
  110 FORMAT ('1', ' CORRELATION MATRIX X 1,000,000, STEP ',I4,                 
     * ' MATRIX TYPE',I4,' PAGE NO.',I4,/)                                      
C                                                                               
C      LABEL COLUMNS                                                            
C                                                                               
      PRINT 115, (J,J=J1,J2)                                                    
  115 FORMAT (/  ,'LINE',123X,'VAR.',/,' NO.',1X,15(I5,3X),                     
     * 3X,'NO.',/)                                                              
C                                                                               
C*********************************************************************          
C                                                                               
C              STEP 3 - A                                                       
C                                                                               
C*********************************************************************          
C                                                                               
      DO 140 K = 1, NROW-1                                                      
C                                                                               
C     SET UP ONE LINE                                                           
      DO 120 J = J1,J2                                                          
C                                                                               
      IF (ABS(PP(K,J)) .LT. CUTOFF) THEN                                        
      JR(J) = 0                                                                 
      ELSE                                                                      
      JR(J) = INT(PP(K,J)*1000000)                                              
      END IF                                                                    
C                                                                               
      IF (J .NE. NCOL) GO TO 120                                                
C                                                                               
      IF (ABS(PP(K,NDEXY)) .LT. CUTOFF) THEN                                    
      JR(J2) = 0                                                                
      ELSE                                                                      
      JR(J2) = INT(PP(K,NDEXY)*1000000)                                         
      END IF                                                                    
C                                                                               
  120 CONTINUE                                                                  
C                                                                               
      JR(J2+1) = INT(PP(K,NDEXP1))                                              
C                                                                               
      PRINT 130, K,(JR(J),J=J1,J2+1)                                            
  130 FORMAT (1X,I3,15I8,I4)                                                    
C                                                                               
  140 CONTINUE                                                                  
C                                                                               
      DO 150 J=J1,J2                                                            
C                                                                               
      IF (ABS(PP(NDEXY,J)) .LT. CUTOFF) THEN                                    
      JR(J) = 0                                                                 
      ELSE                                                                      
      JR(J) = INT(PP(NDEXY,J)*1000000)                                          
      END IF                                                                    
C                                                                               
      IF (J2 .NE. NCOL) GO TO 150                                               
C                                                                               
      IF (ABS(PP(NDEXY,NDEXY)) .LT. CUTOFF) THEN                                
      JR(J2) = 0                                                                
      ELSE                                                                      
      JR(J2) = INT(PP(NDEXY,NDEXY)*1000000)                                     
      END IF                                                                    
C                                                                               
  150 CONTINUE                                                                  
C                                                                               
C     SET UP LAST LINE                                                          
C                                                                               
      JR(J2+1) = INT(PP(NDEXY,NDEXP1))                                          
      PRINT 130, NDEXY,(JR(J), J=J1,J2+1)                                       
C                                                                               
  160 CONTINUE                                                                  
C                                                                               
C*********************************************************************          
C                                                                               
C              STEP 2 - B                                                       
C                                                                               
C*********************************************************************          
C                                                                               
C     SET UP FINAL PAGE                                                         
  170 J1 = J2 + 1                                                               
      J2 = NCOL-1                                                               
      PRINT 110, NSTEP,MATYP,NPAGE+1                                            
      PRINT 185, (J,J=J1,J2),NDEXY                                              
  185 FORMAT(/ , 'LINE',123X,'VAR',/,1X,'NO.',1X,15(I5,3X),3X,'NO.',/)         
      DO 195 K=1,NROW-1                                                         
C                                                                               
C*********************************************************************          
C                                                                               
C              STEP 3 - B                                                       
C                                                                               
C*********************************************************************          
C  
C     SET UP ONE LINE
      DO 205 J=J1,J2
        IF (ABS(PP(K,J)) .LT. CUTOFF) THEN 
        JR(J) = 0                         
       ELSE                              
        JR(J) = INT(PP(K,J)*1000000)    
      END IF                           
  205 CONTINUE                        
C 
      IF (ABS(PP(K,NDEXY)) .LT. CUTOFF) THEN  
      JR(J2+1) = 0                           
      ELSE                                  
      JR(J2+1) = INT(PP(K,NDEXY)*1000000)  
      END IF                              
C                                        
      PRINT 220, K,(JR(J),J=J1,J2+1),INT(PP(K,NDEXP1)),INT(PP(K,NDEXP2))        
  220 FORMAT (1X,I3,15I8,2I3)           
C                                      
  195 CONTINUE                        
C                                    
      DO 230 J=J1,J2                
      IF (PP(NDEXY,J) .LT. CUTOFF) THEN                                         
      JR(J) = 0                    
      ELSE                        
      JR(J) = INT(PP(NDEXY,J)*1000000)                                          
      END IF                     
C                               
  230 CONTINUE                 
      JR(J2+1) = INT(PP(NDEXY,NDEXY)*1000000)                                   
      PRINT 240, NDEXY,(JR(J),J=J1,J2+1) 
  240 FORMAT (1X,I3,15I8)    
      RETURN                
      END                  
      SUBROUTINE SCREEN (PP,SPEED,ABNAME,AEPOCH,AHSUBN,COLA,DELTT,              
     * CUTOFF,EPOCH,HSUBN,ICNTL,ID,IDD,IHH,IMIN,IMM,INOBS,IYY,JR,               
     * K,KAPPA,MAXTRM,MCNST,MINTRM,M1,M2,NAME,NCOL,NCONST,NDEXM1,               
     * NDEXP1,NDEXP2,NDEXY,NDR,NORDER,NQP,NROW,NV,NYYYY,OMEAN,OSD,              
     * OVAR,P,QQ,RT,R1,SETS,SIG,SX,THBAR,TIMEZ,TSTORE,TZERO,YEPOCH,             
     * XLONG,YNODE)                                                             
C_______________________________________________________________________        
C                                                                               
C     DATE:      13 DEC 83                                                      
C                                                                               
C     LABEL:     -SCREN3T- + -SCREN4T-                                          
C                                                                               
C     PURPOSE:   THIS IS A COMPLETELY REWRITTEN FORM OF -SCREEN- USING          
C                -SCREN2T- AS A BASE. REWRITING AND CORRECTIONS BY DLH.         
C                                                                               
C_______________________________________________________________________        
C                                                                               
C  MAJOR MODIFICATION AND DOCUMENTATION, MAY 1983.                              
C                                                                               
C     PURPOSE:                                                                  
C     SUBROUTINE -SCREEN- USES THE CROSS PRODUCT MATRIX OR THE                  
C  CORRELATION MATRIX GENERATED BY -CSTAT2- TO GENERATE A REGRESSION            
C  EQUATION RELATING AN ARBITRARY TABULAR FUNCTION TO THE SUM OF A              
C  TRIGONOMETRIC SERIES OF SPECIFIED FREQUENCIES, AND OF OTHER                  
C  SPECIFIED PREDICTORS.                                                        
C                                                                               
C     THE SUBPROGRAM OPERATES IN THREE BASIC STEPS.  1) THE SQUARE              
C  OF THE MULTIPLE CORRELATION OF TWO SUCCESSIVE PREDICTORS (THE SINE           
C  AND COSINE OF A COMMON FREQUENCY) AND THE DEPENDENT VARIABLE IS              
C  COMPUTED FOR EACH FREQUENCY, AS THE PREDICTOR HAVING THE HIGHEST             
C  CORRELATION TO THE DEPENDENT VARIABLE IS SELECTED FOR                        
C  PROCESSING.  2) THE CROSS PRODUCT MATRIX IS MODIFIED BY                      
C  INTERCHANGING THE ROW AND COLUMN VECTORS CORRESPONDING TO                    
C  THE SELECTED FREQUENCY WITH THE UPPER LEFT ROW AND COLUMN                    
C  VECTORS OF THE UNSELECTED PORTION OF THE MATRIX.  3) THE                     
C  REGRESSION COEFFICIENTS EXPRESSING EACH UNSELECTED PREDICTOR                 
C  TO THE SELECTED PREDICTORS IS COMPUTED, AND THE UNSELECTED                   
C  PREDICTORS ARE MADE ORTHOGONAL TO THE SELECTED PREDICTORS.                   
C     THE PROCESS IS REPEATED UNTIL ALL PREDICTORS HAVE BEEN CON-               
C  SIDERED, OR UNTIL A PREDICTOR IS SELECTED WHICH DOES NOT MAKE                
C  A SIGNIFICANT IMPROVEMENT IN THE PREDICTION.  THE CALCULATION                
C  MAY BE TERMINATED AT THIS STAGE.  PARTIAL RESULTS MAY BE                     
C  WRITTEN ON DISK FOR STORAGE, OR PRINTED IF DESIRED.  A HARD                  
C  COPY PRINTOUT OF THE FINAL RESULTS MAY BE OBTAINED AT EACH                   
C  STEP, OR ONLY AT THE FINAL STEP AS DESIRED.                                  
C     SUBROUTINE -SCREEN- IS QUITE GENERAL AND CAN BE USED FOR THE              
C  TRIGONOMETRIC EXPANSION OF MANY TYPES OF DATA.                               
C                                                                               
C                                                                               
C                                                                               
C   SUBROUTINE                                                                  
C   VARIABLES                                                                   
C                                                                               
C     NQP(N)    = INDEX NUMBERS OF DEFECTIVE VARIABLES.                         
C     RMAX      = THE SQUARE OF THE HIGHEST CORRELATION COEFFICIENT             
C                 OBTAINED AT ANY LEVEL IN THE SCREENING PROCESS.               
C     PP(I,J)   = CROSS CORRELATION MATRIX.  PP(I,NDEXP1) CONTAINS              
C                 THE INITIAL INDEX NUMBERS OF ALL VECTORS, WHERE               
C                 I = 1,NDEXY.                                                  
C     RSQR      = SQUARE OF THE MULTIPLE CORRELATION BETWEEN THE                
C                 RESIDUE OF X(NDEXY) AND ANY FREQUENCY AT ANY STAGE OF         
C                 THE CALCULATIONS.                                             
C     KEY=L     = THE INDEX NUMBER FOR A SELECTED CONSTITUENT.                  
C     CUTOFF    = THE MINIMUM FRACTIONAL REDUCTION OF THE VARIANCE              
C                 CONSIDERED TO BE SIGNIFICANT.                                 
C     TEMP      = A TEMPORARY STORAGE CELL.                                     
C     F         = A DUMMY FACTOR, USUALLY A REGRESSION COEFFICIENT.             
C     KSTORE    = THE NUMBER OF CONSTITUENTS EVALUATED AT ANY STAGE             
C                 AND THE INDEX NUMBER OF STORAGE OF OUTPUT RESULTS.            
C     MINTRM    = MINIMUM NUMBER OF TERMS WANTED IN AN OUTPUT EQUATION.         
C     MAXTRM    = MAXIMUM NUMBER OF TERMS WANTED IN AN PUTPUT EQUATION.         
C     OVAR      = OBSERVED VARIANCE.                                            
C     IPRINT    = ZERO, PRINT UNSORTED RESULTS.                                 
C               = 1, PRINT SORTED RESULTS.                                      
C     EMEAN     = CONSTANT IN REGRESSION EQUATION.                              
C     NX        = A DUMMY INDEX.                                                
C     ESD       = STANDARD DEVIATION OF THE RESIDUE.                            
C     SETS(NDEXP1) = TOTAL NUMBER OF OBSERVATIONS.  ONLY IF DATA SERIES         
C                 IS ONE UNBROKEN SET IS SETS(NDEXP1) = NOBS.                   
C     INOBS     = NUMBER OF OBSERVATIONS READ AT ONE TIME.                      
C     IYY       = YEAR                         X                                
C     IMM       = MONTH                         X    FIRST OBS                  
C     IDD       = DAY                            >   IN EACH                    
C     IHH       = HOUR                          X    SERIES                     
C     IMIN      = MINUTE, IN TENTHS OF HOURS   X                                
C     NDR       = THE NUMBER OF PERIODS OF RECORD CONSIDERED IN                 
C                 AN ANALYSIS.                                                  
C     HSUBN(J)  = THE AMPLITUDE OF A TIDAL CONSTITUENT.                         
C     EPOCH(J)  = THE PHASE OF A TIDAL CONSTITUENT.                             
C     YNODE(J)  = NODE FACTOR TO MODIFY HSUBN TO A STANDARD YEAR.               
C     YEPOCH(J) = EQUILIBRIUM ARGUMENTS TO MODIFY -EPOCH- TO A                  
C                 STANDARD YEAR.                                                
C     COLA(J)   = CORRECTION FACTOR NEEDED TO CONVERT EPOCH TO ZERO             
C                 LONGITUDE.                                                    
C     KAPPA(J)  = PHASE REFERRED TO ZERO LONGITUDE.                             
C     NAME(J)   = STANDARD SYMBOL FOR A CONSTITUENT.                            
C     SPEED(J)  = FREQUENCY IN DEGREES-PER-HOUR.                                
C     R1(J)     = MULTIPLE CORRELATION COEFFICIENT BETWEEN THE TIDE AND         
C                 ANY ONE COMPONENT.                                            
C     RT(J)     = THE MULTIPLE CORRELATION COEFFICIENT BETWEEN THE TIDE         
C                 AND ALL CONSTITUENTS CONSIDERED IN THE -J- STAGE.             
C     NORDER(J) = THE ORDER IN WHICH A CONSTITUENT IS SELECTED.                 
C     TSTORE(N) = TEMPORARY STORAGE OF A VECTOR, USED FOR                       
C                 TRANSFERING ROWS AND COLUMNS OF A MATRIX.                     
C_______________________________________________________________________        
C                                                                               
C     SUBROUTINE -SCREEN- STARTS HERE.                                          
C_______________________________________________________________________        
C                                                                               
      DIMENSION ABNAME(1),ICNTL(1),NORDER(1),YNODE(1),YEPOCH(1)                 
      DIMENSION NQP(1),R1(1),RT(1),HSUBN(1),EPOCH(1),JR(1),                     
     * MCNST(1),COLA(1)                                                         
      REAL KAPPA(1)                                                             
      CHARACTER *80 ID(4)                                                       
      DIMENSION TSTORE(1), NAME(1), SX(1), SIG(1)                               
      DIMENSION P(1),AHSUBN(1),AEPOCH(1)                                        
      INTEGER INOBS(1),IYY(1),IMM(1),IDD(1),IHH(1),IMIN(1)                      
      REAL*8 PP(M2,M2), SPEED(1), QQ(M2,3)                                      
      KP = 0                                                                    
      KNP = 0                                                                   
C_______________________________________________________________________        
C                                                                               
C      INITIALIZE CONSTANTS AND THE FIELD FOR STORING LIST OF                   
C      FUNCTIONS WITH ZERO VARIANCE.                                            
C                                                                               
      DO 10 K = 1,NV                                                            
        NQP(K) = 0                                                              
   10   CONTINUE                                                                
      CONV = 180./3.141592625                                                   
      NCHNG = 0                                                                 
      MVAR = 1                                                                  
      NNV = NV                                                                  
      KRC = 0                                                                   
      NSTOP = 0                                                                 
C                                                                               
C     IF (ICNTL(7) .EQ. 0) GO TO 12                                             
      IF (ICNTL(5) .EQ. 0) THEN                                                 
          CALL PMATRX(PP,M2,NDEXY,NDEXY,NDEXP1,0,0)                             
        ELSE                                                                    
          CALL MATCOR(PP,CUTOFF,JR,M2,NDEXY,NDEXY,NDEXP1,NDEXY,0,0)             
        END IF                                                                  
C  12 CONTINUE                                                                  
C                                                                               
      DO 500 K = 1,NDEXM1                                                       
      IF (MVAR .EQ. 2) THEN                                                     
C                                                                               
C     THIS VALUE OF K PERTAINS TO THE SECOND MEMBER OF A PAIR.                  
C     CALCULATIONS FOR THIS K ARE COMPLETED.                                    
C                                                                               
      MVAR = 1                                                                  
      GO TO 500                                                                 
      END IF                                                                    
C                                                                               
C     FOR EACH VALUE OF K, THE CODE ENDING AT 500 WILL SELECT THE               
C     REMAINING VARIABLE OR VARIABLE PAIR WHICH IS MOST HIGHLY                  
C     CORRELATED WITH THE RESIDUAL OF THE DEPENDENT VARIABLE.  THE              
C     MULTIPLE REGRESSION EQUATION WILL BE COMPUTED AND PRINTED AT              
C     SELECTED STEPS.                                                           
C                                                                               
C*********************************************************************          
C                                                                               
C              STEP 2 - A                                                       
C                                                                               
C*********************************************************************          
C                                                                               
      RMAX = 0                                                                  
      IF (ICNTL(5) .EQ. 0) THEN                                                 
C     SUM OF PRODUCTS MATRIX IS BEING USED,                                     
C     OTHERWISE, THE CORRELATION MATRIX IS BEING USED.                          
C                                                                               
C*********************************************************************          
C                                                                               
C              STEP 2 - AP - 1                                                  
C                                                                               
C*********************************************************************          
C                                                                               
      DO 60 L = K,NNV,2                                                         
      MVAR = PP(L,NDEXP2)                                                       
      IF (MVAR .LT. 0) GO TO 60                                                 
C     THIS VARIABLE HAS BEEN DISCARDED, IT ADDS NO NEW INFORMATION.             
      IF (MVAR .NE. 2) GO TO 70                                                 
      IF (PP(L,L) .LT. TZERO .AND. PP(L+1,L+1) .LT. TZERO) THEN                 
C     THIS VARIABLE SHOULD BE DISCARDED, IT ADDS NO USEFUL INFORMATION.         
      PP(L,NDEXP2) = -PP(L,NDEXP1)                                              
      PP(L+1,NDEXP2) = -PP(L,NDEXP1)-1                                          
      GO TO 60                                                                  
C                                                                               
      ELSE                                                                      
C                                                                               
C     ELIMINATE ANY POSSIBLE ATTEMPT TO DIVIDE BY ZERO.                         
      IF (PP(L,L).GT.TZERO) GO TO 30                                            
      NQP(NCHNG) = INT(PP(L,NDEXP1))                                            
      PP(L,L) = 0.000001                                                        
      NCHNG = NCHNG + 1                                                         
   30 IF (PP(L+1,L+1) .GT. TZERO) GO TO 40                                      
      NQP(NCHNG) = INT(PP(L+1,NDEXP1))                                          
      PP(L+1,L+1) = 0.000001                                                    
      NCHNG = NCHNG + 1                                                         
   40 CONTINUE                                                                  
C                                                                               
C     FORM THE SQUARE OF THE JOINT CORRELATION COEFFICIENT -RSQR-               
C     BETWEEN THE DEPENDENT VARIABLE AND A SINE AND COSINE PAIR.                
C                                                                               
      RSQR = ((PP(L,NDEXY)*PP(L,NDEXY)) / (PP(L,L)*PP(NDEXY,NDEXY))             
     *  + (PP(L+1,NDEXY)*PP(L+1,NDEXY)) / (PP(L+1,L+1)*PP(NDEXY,NDEXY))         
     *  - 2.*PP(L,L+1) * PP(L,NDEXY) * PP(L+1,NDEXY) /( PP(L,L)                 
     *  *PP(L+1,L+1) * PP(NDEXY,NDEXY)))/ (1. - (PP(L,L+1)*PP(L,L+1)            
     *  /( PP(L,L) * PP(L+1,L+1))))                                             
C                                                                               
      IF(K .GT. NCOL) GO TO 50                                                  
      J = (L+1)/2                                                               
      R1(J) = RSQR                                                              
 50   IF ( RSQR .LE. RMAX ) GO TO 60                                            
      RMAX = RSQR                                                               
      KEY = L                                                                   
      MVAR = 2                                                                  
      END IF                                                                    
C                                                                               
   60 CONTINUE                                                                  
C                                                                               
C*********************************************************************          
C                                                                               
C              STEP 2 - AP - 2                                                  
C                                                                               
C     FORM SQUARES OF THE SIMPLE CORRELATION COEFFICIENT -RSQR-                 
C     BETWEEN THE DEPENDENT VARIABLE AND THE OTHER VARIABLES.                   
C                                                                               
C*********************************************************************          
C                                                                               
   70 DO 90 L = NNV+1,NDEXM1                                                    
C                                                                               
      IF (PP(L,L) .LT. TZERO) THEN                                              
C     THIS VARIABLE SHOULD BE DISCARDED.                                        
C     IT CONTAINS NO USEFUL INFORMATION.                                        
      PP(L,NDEXP2) = -PP(L,NDEXP1)                                              
      ELSE                                                                      
      RSQR = (PP(L,NDEXY)*PP(L,NDEXY))/(PP(L,L)*PP(NDEXY,NDEXY))                
      END IF                                                                    
C                                                                               
      IF (K .GT. NCOL) GO TO 80                                                 
      J = L- NCONST                                                             
      R1(J) = RSQR                                                              
   80 IF (RSQR .LT. RMAX) GO TO 90                                              
      RMAX = RSQR                                                               
      KEY = L                                                                   
      MVAR = 1                                                                  
   90 CONTINUE                                                                  
C                                                                               
      ELSE                                                                      
C                                                                               
C*********************************************************************          
C                                                                               
C              STEP 2 - AC - 1                                                  
C                                                                               
C     THE CORRELATION MATRIX IS BEING USED                                      
C                                                                               
C**********************************************************************         
C                                                                               
      DO 120 L = K,NNV,2                                                        
      MVAR = PP(L,NDEXP2)                                                       
      IF (MVAR .LT. 0) GO TO 120                                                
C     THIS VARIABLE HAS BEEN DISCARDED.                                         
C     IT CONTAINS NO NEW INFORMATION.                                           
C                                                                               
      IF (MVAR .NE. 2) GO TO 130                                                
C                                                                               
C     THIS VARIABLE IS A MEMBER OF A PAIR.                                      
C     ELIMINATE ANY POSSIBLE ATTEMPT TO DIVIDE BY ZERO                          
C                                                                               
      IF (PP(L,L+1)**2 .GE. 1) THEN                                             
C     THIS VARIABLE SHOULD BE DISCARDED.                                        
C     BOTH MEMBERS OF THE PAIR ARE IDENTICAL                                    
C                                                                               
      PP(L,NDEXP2) = -PP(L,NDEXP1)                                              
      PP(L+1,NDEXP2) = -PP(L,NDEXP1)-1                                          
      GO TO 120                                                                 
C                                                                               
      ELSE                                                                      
C                                                                               
      RSQR = (PP(L,NDEXY)**2+PP(L+1,NDEXY)**2-                                  
     * 2*PP(L,L+1)*PP(L,NDEXY)*PP(L+1,NDEXY))/(1-                               
     * PP(L,L+1)**2)                                                            
C                                                                               
      IF (K .GT. NCOL) GO TO 100                                                
      J = (L+1)/2                                                               
      R1(J) = RSQR                                                              
C                                                                               
  100 IF (RSQR .LE. RMAX) GO TO 120                                             
      RMAX = RSQR                                                               
      KEY = L                                                                   
      MVAR = 2                                                                  
      END IF                                                                    
C                                                                               
  120 CONTINUE                                                                  
C_______________________________________________________________________________
C                                                                               
C     FORM SQUARE OF THE SIMPLE CORRELATION COEFFICIENT BETWEEN                 
C     THE DEPENDENT VARIABLE AND OTHER VARIABLES.                               
C                                                                               
  130 DO 150 L = NNV+1,NDEXM1                                                   
      RSQR = PP(L,NDEXY)**2                                                     
      IF (K .GE. NCOL) GO TO 140                                                
      J = L - NCONST                                                            
      R1(J) = RSQR                                                              
C                                                                               
  140 IF (RSQR .LT. RMAX) GO TO 150                                             
      RMAX = RSQR                                                               
      KEY = L                                                                   
      MVAR = 1                                                                  
  150 CONTINUE                                                                  
C                                                                               
      END IF                                                                    
C                                                                               
C*********************************************************************          
C                                                                               
C              STEP 2 - B                                                       
C                                                                               
C*********************************************************************          
C                                                                               
      IF(MVAR.EQ.1) THEN                                                        
      KNP = KNP + 1                                                             
      ELSE                                                                      
      KP = KP + 1                                                               
      END IF                                                                    
C_______________________________________________________________________        
C                                                                               
C     RECORD ORDER OF SELECTION OF PREDICTOR                                    
      KSTORE = KP + KNP                                                         
      NORDER(KSTORE) = KSTORE                                                   
      IF(K .GT. NCOL) GO TO 170                                                 
      PRINT 160, (J,R1(J),J=(J+1)/2,NDEXY-NCONST-1)                             
  160 FORMAT(/,' TABLE OF R SQUARES',/,10(I3,F9.5))                           
C                                                                               
  170 CONTINUE                                                                  
      IF (RMAX .LT. CUTOFF) THEN                                                
C     NO REMAINING VARIABLE MAKES A SIGNIFICANT                                 
C     CONTRIBUTION TO PREDICTIVE SKILL                                          
C                                                                               
      IF (NSTOP .EQ. 0) THEN                                                    
C     THIS IS THE FIRST VARIABLE TO FAIL THE CUTOFF TEST                        
C                                                                               
      IF (KSTORE .LT. MINTRM .OR. KSTORE .GT.MAXTRM) THEN                       
C     RESULTS OF THE LAST STEP WERE VALID BUT WERE                              
C     NOT PRINTED.  THE SOLUTION SHOULD BE PRINTED NOW.                         
C                                                                               
      PRINT 180, KSTORE,RMAX,KSTORE-1                                           
  180 FORMAT (/,'THE',I4,'TH CONSTITUENT ACCOUNTS FOR ONLY',F7.5,             
     * ' OF THE VARIANCE.  CALCULATIONS FOR',I4,' CONSTITUENTS ARE',            
     * ' GIVEN BELOW.',/,' RESULTS OBTAINED LATER IN THE PROGRAM ARE',          
     * ' OF DOUBTFUL VALUE.')                                                   
C                                                                               
C  GO DIRECTLY TO THE OUTPUT ROUTINE.  MATRIX OPERATIONS FOR THE                
C  PRECEEDING STEP HAVE BEEN COMPLETED.                                         
C                                                                               
      CALL OUTPUT (PP,SPEED,ABNAME,AEPOCH,AHSUBN,COLA,DELTT,                    
     * EPOCH,HSUBN,ICNTL,ID,IDD,IHH,IMIN,IMM,INOBS,IYY,K,KAPPA,                 
     * KSTORE,MCNST,M1,M2,NAME,NCONST,NDEXM1,NDEXP1,NDEXP2,                     
     * NDEXY,NDR,NORDER,NYYYY,OMEAN,OSD,OVAR,P,RT,R1,SETS,SIG,                  
     * SX,THBAR,TIMEZ,TZERO,XLONG,YEPOCH,YNODE)                                 
C                                                                               
      NSTOP = KSTORE                                                            
C                                                                               
      ELSE                                                                      
C     PRECEEDING RESULTS WERE PRINTED                                           
C                                                                               
      PRINT 190, KSTORE,RMAX,KSTORE-1                                           
  190 FORMAT (/  , 'THE',I4,'TH CONSTITUENT ACCOUNTS FOR ONLY'                  
     * ,F7.5, 'OF THE VARIANCE.',/, ' RESULTS FOR THE',I4,'TH                   
     * CONSTITUENTS HAVE BEEN PRINTED AND ARE THE FINAL RESULTS                 
     * THAT ARE BELIEVED TO BE VALID',/)                                        
      END IF                                                                    
      ELSE                                                                      
C                                                                               
C**********************************************************************         
C                                                                               
C              STEP 2 - C                                                       
C                                                                               
C*********************************************************************          
C                                                                               
      IF (ICNTL(9) .EQ. 0) GO TO 501                                            
C     CALCULATIONS TERMINATED BY THIS TRANSFER, FOR RSQR .LT. CUTOFF            
      END IF                                                                    
C                                                                               
      ELSE                                                                      
C     RESULTS OF THIS STEP ARE VALID.  CONTINUE CALCULATIONS                    
C                                                                               
      IF (ICNTL(10) .EQ. 1) GO TO 320                                           
C     THIS TRANSFER AVOIDS REARRANGEMENT OF MATRIX                              
      IF (K .EQ. KEY) GO TO 320                                                 
C     REARRANGEMENT OF MATRIX NOT REQUIRED                                      
C                                                                               
      IF(MVAR .EQ. 2) THEN                                                      
C     REARRANGE THE MATRIX FOR THE SELECTION OF A  PERIODIC                     
C     PREDICTOR.                                                                
C                                                                               
C     EXCHANGE COLUMN VECTORS                                                   
      DO 210 M = 1,NDEXY                                                        
      TEMP = PP(M,K)                                                            
      PP(M,K) = PP(M,KEY)                                                       
      PP(M,KEY) = TEMP                                                          
      TEMP = PP(M,K+1)                                                          
      PP(M,K+1) = PP(M,KEY+1)                                                   
      PP(M,KEY+1) = TEMP                                                        
 210  CONTINUE                                                                  
C     MOVE ROW VECTORS.                                                         
      DO 220 M = 1,NDEXP2                                                       
      TEMP = PP(K,M)                                                            
      PP(K,M) = PP(KEY,M)                                                       
      PP(KEY,M) = TEMP                                                          
      TEMP = PP(K+1,M)                                                          
      PP(K+1,M) = PP(KEY+1,M)                                                   
      PP(KEY+1,M) = TEMP                                                        
  220 CONTINUE                                                                  
      ELSE                                                                      
C     REARRANGE THE MATRIX FOR THE SELECTION OF A                               
C     NON PERIODIC PREDICTOR.                                                   
      DO 230 N =1,NDEXP2                                                        
C     SAVE SELECTED ROW VECTOR                                                  
  230 TSTORE(N) = PP(KEY,N)                                                     
C     MOVE EACH ROW VECTOR FROM K TO L-1 DOWN ONE LINE                          
C     BEGINING WITH L-1.                                                        
      DO 250 M = KEY,K+1,-1                                                     
      DO 240 N = 1,NDEXP2                                                       
 240  PP(M,N) = PP(M-1,N)                                                       
 250  CONTINUE                                                                  
C     PLACE VECTORS IN ROW K                                                    
      DO 270 N = 1,NDEXP2                                                       
 270  PP(K,N) = TSTORE(N)                                                       
C     SAVE SELECTED COLUMN VECTORS                                              
      DO 280 N=1,NDEXY                                                          
 280  TSTORE(N) = PP(N,KEY)                                                     
C     MOVE EACH COLUMN VECTOR FROM K TO L-1 ONE VALUE                           
C     TO THE RIGHT BEGINING WITH L-1.                                           
      DO 300 M = KEY,K+1,-1                                                     
      DO 290 N = 1,NDEXY                                                        
 290  PP(N,M) = PP(N,M-1)                                                       
  300 CONTINUE                                                                  
C     PLACE SELECTED COLUMN VECTORS IN COLUMN K                                 
      DO 310 N = 1,NDEXY                                                        
 310  PP(N,K) = TSTORE(N)                                                       
C     ESTABLISH NEW LOCATION FOR FINAL PERIODIC VARIABLES.                      
      NNV = NV + 1                                                              
      END IF                                                                    
      END IF                                                                    
C                                                                               
C_________________________________________________________________________      
      IF (ICNTL(7) .EQ. 0 .OR. K .GT. NCOL) GO TO 315                           
      IF (ICNTL(5) .EQ. 0) THEN                                                 
          CALL PMATRX(PP,M2,NCOL,NDEXY,NDEXP1,K,1)                              
        ELSE                                                                    
          CALL MATCOR(PP,CUTOFF,JR,M2,NCOL,NDEXY,NDEXP1,NDEXY,K,1)              
        END IF                                                                  
  315 CONTINUE                                                                  
C_______________________________________________________________________________
C                                                                               
C     AT THIS POINT -KEY- INDICATES THE CURRENT POSITION OF THE SINE            
C  FUNCTION CORRESPONDING TO THE SELECTED FREQUENCY ON THE POSITION             
C  OF THE SELECTED NON-PERIODIC VARIABLE.                                       
C                                                                               
C     IN THE NEXT LOOP, THE CROSS PRODUCTS IN THE FIRST ROW OF THE              
C  MATRIX ARE REPLACED BY THE REGRESSION COEFFICIENTS WHICH BEST EXPRESS        
C  EACH OF THE UNSELECTED VARIABLES IN TERMS OF THE SELECTED VARIABLES.         
C  IN ALL ROWS, THE PORTION OF THE VARIANCE EXPLAINED BY THE SELECTED           
C  VARIABLE IS REMOVED FROM THE REMAINING VARIANCE.  THIS OPERATION IS          
C  FIRST CARRIED OUT FOR THE SINE TERM AND THEN FOR THE COSINE TERM.            
C                                                                               
C_______________________________________________________________________        
C                                                                               
C     SOLVE FOR COEFFICIENT OF SINE OR NON PERIODIC FUNCTION.                   
 320  DO 340 L = 1,NDEXY                                                        
      IF (L.EQ.K) GO TO 340                                                     
      FKL = PP(L,K) / PP(K,K)                                                   
      DO  330 M = K,NDEXY                                                       
  330 PP(L,M) = PP(L,M) - FKL * PP(K,M)                                         
  340 CONTINUE                                                                  
      FKK =  PP(K,K)                                                            
      DO 350 M = K,NDEXY                                                        
 350  PP(K,M) = PP(K,M)/FKK                                                     
      IF(MVAR.NE.2) GO TO 390                                                   
C                                                                               
C  FOLLOWING STATEMENT FOR TESTING.                                             
C                                                                               
      IF (ICNTL(7) .EQ. 0 .OR. K .GT. NCOL) GO TO 355                           
      IF (ICNTL(5) .EQ. 0) THEN                                                 
          CALL PMATRX(PP,M2,NCOL,NDEXY,NDEXP1,K,2)                              
        ELSE                                                                    
          CALL MATCOR(PP,CUTOFF,JR,M2,NCOL,NDEXY,NDEXP1,NDEXY,K,2)              
        END IF                                                                  
  355 CONTINUE                                                                  
C                                                                               
C     SOLVE FOR THE COEFFICIENT OF THE COSINE TERM.                             
C                                                                               
      DO 370 L = 1,NDEXY                                                        
      IF ( L.EQ.K+1 ) GO TO 370                                                 
      FKL = PP(L,K+1) / PP(K+1,K+1)                                             
      DO 360 M = K+1,NDEXY                                                      
  360 PP(L,M) = PP(L,M) - FKL * PP(K+1,M)                                       
  370 CONTINUE                                                                  
      FKK =  PP(K+1,K+1)                                                        
      DO 380 M = K+1,NDEXY                                                      
  380 PP(K+1,M) = PP(K+1,M)/FKK                                                 
  390 CONTINUE                                                                  
C                                                                               
      IF (ICNTL(7) .EQ. 0 .OR. K .GT. NCOL) GO TO 405                           
      IF (ICNTL(5) .EQ. 0) THEN                                                 
          CALL PMATRX(PP,M2,NCOL,NDEXY,NDEXP1,K,3)                              
        ELSE                                                                    
          CALL MATCOR(PP,CUTOFF,JR,M2,NCOL,NDEXY,NDEXP1,NDEXY,K,3)              
        END IF                                                                  
  405 CONTINUE                                                                  
C________________________________________________________________________       
C                                                                               
C                                                                               
C  END OF ABOVE LOOP                                                            
C_______________________________________________________________________        
C                                                                               
C     NOTE . . . NOTE . . . NOTE  THE ABOVE INSTRUCTIONS MUST BE                
C  PRESERVED COMPLETELY AND IN ORDER                                            
C                                                                               
C_______________________________________________________________________        
C                                                                               
C     AT THE END OF THIS LOOP -PP(N,NDEXY)- CONTAINS THE REGRESSION             
C  COEFFICIENT FOR THE FIRST (KSTORE) INDEPENDENT VARIABLES SELECTED            
C  OR THE ASSOCIATED VALUE OF REGRESSION COEFFICIENT *                          
C  SIG(NDEXY)/SIG(K).                                                           
C                                                                               
C  -PP(NV,NV)- CONTAINS THE RESIDUAL VARIATION OF THE DEPENDENT DATA,           
C  I.E., THE PART OF THE VARIANCE NOT RELATED TO THE FIRST (KSTORE)             
C  INDEPENDENT VARIABLES.                                                       
C                                                                               
C_______________________________________________________________________        
C                                                                               
      IF (PP(NDEXY,NDEXY) .LT. TZERO) THEN                                      
      PRINT 410, KSTORE                                                         
  410 FORMAT (/  , ' CALCULATIONS FOR THE ',I4,'TH CONSTITUENT ARE',            
     * ' UNSTABLE, AS SIXSQR(NDEXY) .LT. ZERO.',/                               
     * ' CALCULATIONS ARE BEING TERMINATED. ',/)                                
C                                                                               
      IF (KSTORE-NSTOP .EQ. 1) THEN                                             
      PRINT 420, KSTORE-1                                                       
  420 FORMAT(/  , ' THE FINAL VALID RESULTS WERE OBTAINED AT STEPS '            
     * ,I4,' AND ARE GIVEN ABOVE. ')                                            
      GO TO 501                                                                 
      ELSE                                                                      
      DO 430 MM = 1,NDEXY                                                       
C     RESTORES FIELDS NEEDED FOR PRINTING THE OUTPUT OF PREVIOUS STEP           
      PP(MM,NDEXY) = QQ(MM,1)                                                   
      PP(MM,NDEXP1) = QQ(MM,2)                                                  
      PP(MM,NDEXP2) = QQ(MM,3)                                                  
  430 CONTINUE                                                                  
C                                                                               
      CALL OUTPUT (PP,SPEED,ABNAME,AEPOCH,AHSUBN,COLA,DELTT,                    
     * EPOCH,HSUBN,ICNTL,ID,IDD,IHH,IMIN,IMM,INOBS,IYY,K,KAPPA,                 
     * KSTORE,MCNST,M1,M2,NAME,NCONST,NDEXM1,NDEXP1,NDEXP2,                     
     * NDEXY,NDR,NORDER,NYYYY,OMEAN,OSD,OVAR,P,RT,R1,SETS,SIG,                  
     * SX,THBAR,TIMEZ,TZERO,XLONG,YEPOCH,YNODE)                                 
C                                                                               
      NSTOP = KSTORE                                                            
      GO TO 501                                                                 
C     THIS TRANSFER WILL TERMINATE CALCULATIONS                                 
      END IF                                                                    
      ELSE                                                                      
C                                                                               
C*********************************************************************          
C                                                                               
C              STEP 2 - E                                                       
C                                                                               
C*********************************************************************          
C                                                                               
C     RESULTS OBTAINED AT THIS STEP ARE VALID. STORE DATA NEEDED                
C     FOR RECOVERY IF NEXT STEP FAILS.                                          
C                                                                               
      DO 440 MM = 1,NDEXY                                                       
      QQ(MM,1) = PP(MM,NDEXY)                                                   
      QQ(MM,2) = PP(MM,NDEXP1)                                                  
      QQ(MM,3) = PP(MM,NDEXP2)                                                  
  440 CONTINUE                                                                  
      END IF                                                                    
C                                                                               
C                                                                               
C     STORE MULTIPLE CORRELATION COEFFICIENT FOR THIS STEP.                     
C                                                                               
      IF(ICNTL(5) .EQ. 0) THEN                                                  
      RT(KSTORE) = 1.0 - (PP(NDEXY,NDEXY) / (OVAR*SETS))                        
      ELSE                                                                      
      RT(KSTORE) = 1.0 - PP(NDEXY,NDEXY)                                        
      END IF                                                                    
C                                                                               
      PRINT 450, KSTORE, RT(KSTORE)                                             
 450  FORMAT(/,' KSTORE=',I3,' RT= ',F7.4,/)                                  
C                                                                               
C     TEST TO DETERMINE IF OUTPUT IS WANTED AT THIS STEP.  IF NOT,              
C  GO TO THE END OF THE LOOP.                                                   
      IF ( K+2 .GE. NDEXM1 ) GO TO 460                                          
C                                                                               
C     A PRINTOUT OF RESULTS MAY BE OBTAINED FOR THE LAST                        
C  COMPUTATION STEP COMPLETED, BUT, THE RESULTS OF THE FIRST                    
C  (MINTRM-1) LOOPS MAY BE OMITTED IF COMPUTATIONS ARE CONTINUED.               
C                                                                               
      IF ( KSTORE .LT. MINTRM ) GO TO 500                                       
      IF ( KSTORE .GT. MAXTRM .AND. K .LT. NDEXM1-1) GO TO 500                  
  460 CONTINUE                                                                  
C                                                                               
C     IF TRANSFER TO 500 IS NOT MADE, CALL OUTPUT                               
C                                                                               
      CALL OUTPUT (PP,SPEED,ABNAME,AEPOCH,AHSUBN,COLA,DELTT,                    
     * EPOCH,HSUBN,ICNTL,ID,IDD,IHH,IMIN,IMM,INOBS,IYY,K,KAPPA,                 
     * KSTORE,MCNST,M1,M2,NAME,NCONST,NDEXM1,NDEXP1,NDEXP2,                     
     * NDEXY,NDR,NORDER,NYYYY,OMEAN,OSD,OVAR,P,RT,R1,SETS,SIG,                  
     * SX,THBAR,TIMEZ,TZERO,XLONG,YEPOCH,YNODE)                                 
C                                                                               
      KAY = K                                                                   
  500 CONTINUE                                                                  
C                                                                               
C*********************************************************************          
C                                                                               
C              STEP 3                                                           
C                                                                               
C*********************************************************************          
C                                                                               
C     SOLUTION COMPLETED                                                        
C     PRINT IDENTIFIERS FOR EACH DROPPED VARIABLE                               
C                                                                               
  501 IF ( NCHNG .EQ. 0 ) GO TO 525                                             
C                                                                               
      IF (KSTORE .LT. NCONST) PRINT 503, CUTOFF                                 
  503 FORMAT(    '  VARIABLES FOR WHICH NUMBERS ARE LISTED BELOW WERE           
     * DROPPED TO AVOID INSTABILITY OR',/,'  BECAUSE EACH VARIABLE ACC',        
     *'OUNTED FOR LESS THEN ',F8.6,' OF THE INITIAL VARIANCE. ',/)              
      PRINT 507, (PP(I,NDEXP1),I=KAY,NDEXP1)                                    
  507 FORMAT(' ' ,20F4.0,/)
C                         
      J = 0              
      DO 510 I = 1,NDEXM1
      IF ( NQP(I) .EQ. 0 ) GO TO 510                                            
      J = J + 1         
      NQP(J) = NQP(I) 
  510 CONTINUE       
C                                                                               
      PRINT 520, (NQP(M),M=1,J)                                                 
  520 FORMAT (/  ,' THE FOLLOWING PREDICTORS WERE MODIFIED TO AVOID ',          
     * 'DIVISION BY ZERO',/,'  CALCULATIONS INVOLVING THESE PREDIC',            
     * 'TORS ARE OF DOUBTFUL VALUE.',/,(20I4))                                  
C                                                                               
  525 J = 0                                                                     
      DO 530 I=1,NDEXM1                                                         
      IF (PP(I,NDEXP2) .GT. 0) GO TO 530                                        
      J = J+1                                                                   
      NQP(J) = INT(-PP(I,NDEXP2))                                               
  530 CONTINUE                                                                  
C                                                                               
      PRINT 540, (NQP(I), I=1,J)                                                
  540 FORMAT (/  , 'THE FOLLOWING VARIABLES WERE REJECTED TO AVOID ',           
     * 'INSTABILITY',/,20I4,/)                                                  
C               
      RETURN   
      END     
      SUBROUTINE TRGSA ( PP, FREQ, FHOUR, SX, NDR, INOBS, MAXLAG,  
     *                   M2,NIPQ,NV )                            
C                                                               
C___________________________________________________________________________    
C                                                              
C  WRITTEN MAY 1983                                           
C     TEST VERSION 7/11/83                                   
C                                                           
C_____________________________________________________________________________  
C                                                           
C  PURPOSE:                                                 
C                                                           
C    SUBROUTINE -TRGSA2- COMPUTES THE SUMS AND SUMS-OF-PRODUCTS OF TRIG-
C    ONOMETRIC FUNCTIONS.  THE FOLLOWING RELATIONS ARE USED FOR THE SUM-
C    MATION:   SIN(NX) OR COS(NX), N = 1,M  ARE EQUAL TO               
C       ?SIN((M+1)X/2) / SIN(X/2)?  TIMES  SIN(MX/2) OR COS(MX/2).    
C                                                                    
C    SIN(NX)**2, COS(NX)**2 AND SIN(NX)COS(NX) ARE EXPRESSED AS     
C    1/2? 1 +OR- COS(2NX)? OR 1/2? SIN(2NX)?.  OTHER PRODUCTS ARE  
C    EXPRESSED AS FUNCTIONS OF (X-Y) AND (X+Y).  A PSEUDO SUBROUTINE IS
C    USED FOR THE SUMMATION.                                          
C                                                                    
C_____________________________________________________________________________  
C                                                                   
C . . . . DIMENSION AND DECLARATION STATEMENTS . . . .             
C                                                                 
      REAL*8 PP(M2,M2), FREQ(1)                                  
      REAL FHOUR(NDR), SX(M2)                                   
      INTEGER INOBS(NDR)                                       
C____________________________________________________________________________   
C                                                             
C  .  .  SUBROUTINE STARTS HERE  .  .                        
C                                                           
C_____________________________________________________________________________  
C                                                           
C                                                           
C****************************************************************************** 
C                                                           
C     . . . STEP 1 . . .                                    
C                                                           
C****************************************************************************** 
C                                                           
      NIPQ4 = NIPQ * 4                                      
      C2PI  = FLOAT(NIPQ4)                                     
      CONV  = 3.1415927/C2PI                                   
      HOUR  = FHOUR(1)                                         
C                                                           
C****************************************************************************   
C                                                                               
C     . . . STEP 2 . . .                                                        
C                                                                               
C****************************************************************************   
C                   
      DO 300 L=1,NDR
        FINAL = HOUR + INOBS(L) - MAXLAG
        PRINT 2, L    
    2   FORMAT (/,' DATA BLOCK NO.',I3)
        IF (FHOUR(L+1) .GT. FINAL+1.) PRINT 7, FINAL, HOUR
C       THERE IS A DATA BREAK BETWEEN THIS DATA BLOCK AND THE NEXT.
    7   FORMAT (/,'  FROM TRGSA, GAP IN DATA, FINAL=',F10.5, 
     1        '  HOUR=',F6.2,//)  
        ALPHA = 1.0               
        GO TO 20                 
C                             
C**************************************************************************     
C                            
C  PSEUDO SUBROUTINE FOR SUMMING TRIGONOMETRIC FUNCTIONS.                       
C                           
C                          
C  11 CONTINUE 
C                          
C     A2 = FINAL * A1
C     A2 = AMOD ( A2, C2PI )
C     A3 = A2 + A1         
C     A3 = AMOD ( A3, C2PI )  
C     COF = SIN(A3)/SIN(A1)  
C     SINSUM = COF * SIN(A2)
C     COSSUM = COF * COS(A2)
C                         
C     GO TO (21,31,41,51) KEY
C                           
C  END OF PSEUDO SUBROUTINE.
C                          
C************************************************************************       
C                         
C     . . . STEP 3 . . . 
C                       
C  START OF BASIC SUB-PROGRAM 
C                            
C***************************************************************************    
C                           
   20 DO 200 I = 1,NV,2    
C       COMPUTE CONSTITUENT INDEX NUMBER 
        J   = (I+1)/2                     
C       COMPUTE SUMS OF SINES AND COSINES 
        A1  = FREQ(J) * CONV              
        KEY = 1                         
        CALL pssub(final, A1, c2pi, cossum, sinsum)
   21   SX(I)   = SX(I)   + SINSUM * ALPHA
        SX(I+1) = SX(I+1) + COSSUM * ALPHA 
C                                       
C*****************************************************************************  
C                                      
C     . . . STEP 4 . . .              
C                                    
C     COMPUTE SUMS OF SQUARES AND PRODUCTS SIN(X)COS(X)                         
C                                   
C****************************************************************************   
C                                  
      A1  = FREQ(J) * CONV * 2     
      KEY = 2                    
      CALL pssub(final, A1, c2pi, cossum, sinsum)
   31 CONTINUE 
      PP(I,I) = PP(I,I) + ((FINAL + 1 - COSSUM)/2.) * ALPHA 
      PP(I,I+1) = PP(I,I+1) + (SINSUM/2.) * ALPHA          
      PP(I+1,I+1) = PP(I+1,I+1) + ((FINAL + 1 + COSSUM)/2.) * ALPHA
C          
C*******************************************************************************
C         
C     . . . STEP 5 . . .
C        
C     COMPUTE SUMS OF CROSS PRODUCTS OF TRIGONOMETRIC TERMS WITH UNLIKE         
C     ARGUMENTS, TAKING THE DIFFERENCE TERM FIRST,                              
C
C****************************************************************************   
C
      M = I + 2       
      DO 100 K=M,NV,2  
        LL = (K+1)/2    
        A1 = (FREQ(J) - FREQ(LL)) * CONV
        KEY = 3    
        CALL pssub(final, A1, c2pi, cossum, sinsum)
   41   P1 = SINSUM  
        P2 = COSSUM              
C       TAKE THE SUM OF ARGUMENTS 
        A1 = (FREQ(J) + FREQ(LL)) * CONV
        A1 = AMOD ( A1, C2PI )
        KEY = 4       
        CALL pssub(final, A1, c2pi, cossum, sinsum)
   51   PP(I,K) = PP(I,K) + ((P2 - COSSUM)/2.) * ALPHA     
        PP(I+1,K+1) = PP(I+1,K+1) + ((P2 + COSSUM)/2.)*ALPHA
        PP(I,K+1) = PP(I,K+1) + ((SINSUM + P1)/2.)*ALPHA
        PP(I+1,K) = PP(I+1,K) + ((SINSUM - P1)/2.)*ALPHA
  100 CONTINUE                                                                  
  200 CONTINUE                                                                  
C                                                                               
C                                                                               
C****************************************************************************   
C                                                                               
C     . . . STEP 6 . . .                                                        
C                                                                               
C  IF THE SERIES DID NOT START AT THE FIRST SCHEDULED OBSERVATION OF THE        
C  YEAR, SUBTRACT THE PORTION OF THE SUM DUE TO THE PERIOD BEFORE THE           
C  BEGINNING OF THE SERIES.                                                     
C                                                                               
C****************************************************************************** 
C                                                                               
      IF (HOUR.NE.-1.0) THEN  
        FINAL = HOUR + 1.0     
        HOUR  = -1.0          
        ALPHA = -1.          
        GO TO 20            
C     ELSE               
C  THERE IS NO DATA GAP AT THIS POINT.  MATRIX CALCULATIONS NOT                 
C  NEEDED HERE.         
      END IF           
C 
C     IF (L .NE. NDR) GO TO 290 
C     GO TO 300                
C 290 HOUR=FHOUR(L+1)         
C     Logic modified by Bob Grumbine 10-3-86
      IF (L .NE. NDR) HOUR = FHOUR(L+1)
C
C*****************************************************************************  
C 
C     . . . STEP 7 . . .   
C  
C****************************************************************************** 
C   
  300 CONTINUE          
C    
C     
      RETURN         
      END           
C**************************************************************************     
      SUBROUTINE pssub(final, a1, c2pi, sinsum, cossum)
C                            
C  SUBROUTINE FOR SUMMING TRIGONOMETRIC FUNCTIONS.                       
C  Added by Bob Grumbine 1-5-87.  This is a recopy of the 'pseudo subroutine'
C    used previously.  The pseudo subr. would not compile on the HP.           
C
      REAL final, a1, c2pi, sinsum, cossum
      REAL a2, a3, cof
 
C  11 CONTINUE
  
      A2 = FINAL * A1
      A2 = AMOD ( A2, C2PI )
      A3 = A2 + A1
      A3 = AMOD ( A3, C2PI )
      COF = SIN(A3)/SIN(A1)
      SINSUM = COF * SIN(A2)
      COSSUM = COF * COS(A2)
 
C     GO TO (21,31,41,51) KEY
 
C  END OF PSEUDO SUBROUTINE.
     
      RETURN
      END
C
C************************************************************************
