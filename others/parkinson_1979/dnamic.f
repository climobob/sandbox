      SUBROUTINE DNAMIC(N,M,NY,IT,JT,IHEMI)
C
      INTEGER N, M, NY, IT, JT, IHEMI

      REAL SEALND(42,41), TSNOW(42,31), HICE(42,31), HSNO(42,31)
      REAL FREE(42,31), FXSOL(42,31), TOCN(42,31), FXBTM(42,31)
      REAL TICE(42,31), TEMPM(42,31,12), DEWM(42,31,12)
      REAL UMAT(42,31,12), VMAT(42,31,12)
      REAL AREA, AMIN, DT, DMIX, EYN, QS, QI, SIGMA, SK, TB, YK
      REAL TS, TI, HI, HS, TW, WIND, TWI, FLAT, DRAG, FLATW, FLONW
      REAL DTOP(42,41)
      REAL RLAT, RLONG, DLAT, DLONG
      INTEGER NSTEP
      REAL COSZ, STIME, TIME, TSFLUX, XLAT(42, 31), XLON(42,31)
      REAL NCC, NCB
      REAL UICE(42,31), VICE(42,31), STEP
      REAL AIRD

      COMMON SEALND,TSNOW,HICE,HSNO,
     1FREE,FXSOL,TOCN,FXBTM,TICE,
     2 TEMPM,DEWM,UMAT,VMAT
      COMMON /C2/ AREA,AMIN,DT,DMIX,EYN,QS,QI,SIGMA,SK,TB,YK
      COMMON /C4/ TS,TI,HI,HS,TW,WIND,TWI,FLAT,DRAG,FLATW,FLONW
      COMMON /C5/ DTOP
      COMMON /C6/ RLAT,RLONG,DLAT,DLONG,NSTEP,
     1COSZ,STIME,TIME,TSFLUX,XLAT,XLON
      COMMON /C7/ NCC,NCB
      COMMON /C8/ UICE,VICE,STEP
      COMMON /C9/ AIRD
      REAL REMAIN(42,31)
      REAL PERICE(42,31)
CBG      REAL SPCICE(42,31), ALOWED(42,31), ALLOW(4),FADD(4)
CBG      REAL S(4),D(4),T(4)
CBG      INTEGER L(4)
      REAL  DEPTH(42,31)
      REAL ADD(4)

      INTEGER NITER, NCNT, M2, M1, I, J
      REAL COVMAX, ANG
 
      NITER=0
      COVMAX=1.0-AMIN
      DT=28800.0
      M2=M
      IF (N.GE.46) M2=M+1
      M1=M2-1
      IF (M2.EQ.13) M2=1
      IF (M1.EQ.0) M1=12
      NCNT=0.0
C  CALCULATE ICE VELOCITIES
      DO 10 I=1,IT
      DO 10 J=1,JT
      UWIND=(UMAT(I,J,M2)-UMAT(I,J,M1))*STEP+UMAT(I,J,M1)
      VWIND=(VMAT(I,J,M2)-VMAT(I,J,M1))*STEP+VMAT(I,J,M1)
      IF (HICE(I,J).EQ.0.0) GO TO 26
      IF (SEALND(I,J).EQ.0.0) GO TO 26
      ANG=ATAN2(VWIND,UWIND)
C  WIND STRESS  20 DEGREES TO THE LEFT  OF THE GEOSTROPHIC WIND
      NBC=3-2*IHEMI
      ANGLE=ANG+0.349066*NBC
      IM1=I-1
      IP1=I+1
      JP1=J+1
      JM1=J-1
      IF (JP1.GT.JT) GO TO 20
      IF (JM1.LT.1) GO TO 21
      DIFF1=DTOP(I,JP1)-DTOP(I,JM1)
      GO TO 22
   20 DIFF1=2.0*(DTOP(I,J)-DTOP(I,JM1))
      GO TO 22
   21 DIFF1=2.0*(DTOP(I,JP1)-DTOP(I,J))
   22 CONTINUE
      IF (IP1.GT.IT) GO TO 23
      IF (IM1.LT.1 ) GO TO 24
      DIFF2=DTOP(IP1,J)-DTOP(IM1,J)
      GO TO 25
   23 DIFF2=2.0*(DTOP(I,J)-DTOP(IM1,J))
      GO TO 25
   24 DIFF2=2.0*(DTOP(IP1,J)-DTOP(I,J))
   25 CONTINUE
      RLAT=XLAT(I,J)
      CORF=(14.584E-5)*SIN(RLAT)
      A1=3.0*.0024*AIRD*(UWIND*UWIND+VWIND*VWIND)
      UGEOC=-DIFF1/(4.0E4*CORF)
      VGEOC= DIFF2/(4.0E4*CORF)
      A2=900.0*HICE(I,J)*CORF
C  50.2145=1025*SQRT(0.0024)
      A11=SQRT(ABS(CORF))*(50.119+0.0955*IHEMI)
      COSANG=COS(ANGLE)
      SINANG=SIN(ANGLE)
      SUMSQ=A11*A11+A2*A2
      UR=(-A1*A11*COSANG-A1*A2*SINANG)/SUMSQ
      VR=(-A1*A11*SINANG+A1*A2*COSANG)/SUMSQ
      UICE(I,J)=UGEOC-UR
      VICE(I,J)=VGEOC-VR
      IF (NCB.NE.1) GO TO 100
      IF (I.EQ.12.AND.J.EQ.13) GO TO 94
      IF (I.EQ.16.AND.J.EQ.27) GO TO 94
      GO TO 100
   94 CONTINUE
      TT1=A1*COSANG
      TT2=A1*SINANG
      TT3=A11*UR
      TT4=A11*VR
      TT5=SQRT(TT3*TT3+TT4*TT4)
      TT6=A2*VICE(I,J)
      TT7=-A2*UICE(I,J)
      TT8=SQRT(TT6*TT6+TT7*TT7)
      TT9=-900.0*HICE(I,J)*DIFF2/4.0E4
      TT10=-900.0*HICE(I,J)*DIFF1/4.0E4
      TT11=SQRT(TT9*TT9+TT10*TT10)
      PRINT 91,I,J,UICE(I,J),VICE(I,J),A1,TT1,TT2,TT5,TT3,TT4,TT8,TT6,
     1 TT7,TT11,TT9,TT10,HICE(I,J) ,HSNO(I,J),FREE(I,J)
   91 FORMAT(2X,2I3/
     1 4X, 'UICE =',F9.5,', VICE =',F9.5,', WIND STRESS =',F13.6,
     2 '(',2F13.6,')' / 4X,'WATER STRESS =',F13.6,'(',2F13.6,'), CORIOLI
     4S FORCE =',F13.6,'(',2F13.6,')' / 4X,'DYNAMIC TOPOGRAPHY =',
     5 F13.6,'(',2F13.6,')' /4X,' INITIALLY HICE =',F8.5,',HSNO =',
     6 F8.5,', AND FREE =',F8.5)
  100 CONTINUE
      GO TO 27
C  IF ON LAND OR HAVE NO ICE -
   26 UICE(I,J)=0.0
      VICE(I,J)=0.0
   27 CONTINUE
10    CONTINUE
C  NOW HAVE CALCULATED ICE VELOCITIES AT EACH GRIDPOINT
C  DO NOT ALLOW ON-LAND VELOCITIES
      DO 70 I=1,IT
      DO 70 J=1,JT
       DEPTH(I,J)=0.0
      N8=0
      N9=0
      IF (UICE(I,J)) 71,72,73
   71 N8=-2
   73 N8=N8+1
      II=I+N8
      IF (II.LT.1.OR.II.GT.IT) GO TO 72
      IF (SEALND(II,J).EQ.0.0) UICE(I,J)=0.0
   72 CONTINUE
      IF (VICE(I,J)) 74,75,76
   74 N9=-2
   76 N9=N9+1
      JJ=J+N9
      IF (JJ.LT.1.OR.JJ.GT.JT)GO TO 75
      IF (SEALND(I,JJ).EQ.0.0) VICE(I,J)=0.0
   75 CONTINUE
   70 CONTINUE
C  ZERO OUT DEVELOPING PERCENTS ICE
   84 CONTINUE
      DO 11 I=1,IT
      DO 11 J=1,JT
      PERICE(I,J)=0.0
      REMAIN(I,J)=0.0
   11 CONTINUE
C  INITIAL CALCULATION OF RE-DISTRIBUTED LEAD AREAS
      DO 30 I=1,IT
      DO 30 J=1,JT
      IF (SEALND(I,J).EQ.0.0) GO TO 30
      IF(HICE(I,J).EQ.0.0) GO TO 30
      AA1= DT*UICE(I,J)/2.0E5
      AA2= DT*VICE(I,J)/2.0E5
      AAA3       =(1.0-FREE(I,J))*(1.0-ABS(AA1))*(1.0-ABS(AA2))
      REMAIN(I,J)=AMIN1(AAA3,COVMAX)
      ENDI=FLOAT(I)+AA1
      ENDJ=FLOAT(J)+AA2
      II=ENDI
      JJ=ENDJ
      IX=II+1
      JY=JJ+1
      ADD(1)=(1.0-ENDI+II)*(1.0-ENDJ+JJ)
      ADD(2)=(ENDI-II)    *(1.0-ENDJ+JJ)
      ADD(3)=(1.0-ENDI+II)*(ENDJ-JJ)
      ADD(4)=(ENDI-II)    *(ENDJ-JJ)
      ICOUNT=0
      DO 32 JJJ=JJ,JY
      DO 32 III=II,IX
      ICOUNT=ICOUNT+1
      IF (III.LT.1.OR.III.GT.IT.OR.JJJ.LT.1.OR.JJJ.GT.JT) GO TO 32
      PERICE(III,JJJ)=(1.0-FREE(I,J))*ADD(ICOUNT) +PERICE(III,JJJ)
   32 CONTINUE
   30 CONTINUE
      NITER=NITER+1
      I8=0
      CCCMAX=COVMAX+0.001
      DO 64 I=1,IT
      DO 64 J=1,JT
      IF (PERICE(I,J).LE.CCCMAX) GO TO 64
      I8=1
   64 CONTINUE
      IF (I8.EQ.0) GO TO 820
C  RE-ADJUST ICE VELOCITIES
      CMAX=COVMAX
      DO 50 I=1,IT
      DO 50 J=1,JT
      IF (SEALND(I,J).EQ.0.0) GO TO 50
      IF (  HICE(I,J).EQ.0.0) GO TO 50
      B10=1.0
      B11=1.0
      B12=1.0
      N8=0
      N9=0
      IF (UICE(I,J)) 950,51, 951
  950 N8=-2
  951 N8=N8+1
      II=I+N8
      IF (II.LT.1.OR.II.GT.IT) GO TO 51
      IF (PERICE(II,J).LE.COVMAX) GO TO 51
      B10=(COVMAX-REMAIN(II,J))/(PERICE(II,J)-REMAIN(II,J))
      IF (REMAIN(II,J).GT.CMAX) B10=0.0
   51 CONTINUE
      IF (VICE(I,J) ) 952, 52 ,953
  952 N9=-2
  953 N9=N9+1
      JJ=J+N9
      IF (JJ.LT.1.OR.JJ.GT.JT) GO TO 52
      IF (PERICE(I,JJ).LE.COVMAX)  GO TO 52
      B11=                             (COVMAX-REMAIN(I,JJ))/
     1 (PERICE(I,JJ)-REMAIN(I,JJ))
      IF (REMAIN(I,JJ) .GT.CMAX) B11=0.0
   52 CONTINUE
      IF (II.LT.1.OR.II.GT.IT.OR.JJ.LT.1.OR.JJ.GT.JT) GO TO 955
      IF (PERICE(II,JJ).GT.COVMAX) B12=(COVMAX-REMAIN(II,JJ))/
     1 (PERICE(II,JJ)-REMAIN(II,JJ))
  955 CONTINUE
   54 UICE(I,J)=UICE(I,J)*AMIN1(B10,B12)
      VICE(I,J)=VICE(I,J)*AMIN1(B11,B12)
   50 CONTINUE
      GO TO 84
  820 CONTINUE
      DO 35 I=1,IT
      DO 35 J=1,JT
      IF (SEALND(I,J).EQ.0.0) GO TO 35
      IF (HICE(I,J).EQ.0.0) GO TO 35
      ENDI=FLOAT(I)+(DT*UICE(I,J)/2.0E5)
      ENDJ=FLOAT(J)+(DT*VICE(I,J)/2.0E5)
      II=ENDI
      JJ=ENDJ
      IX=II+1
      JY=JJ+1
      AA=HICE(I,J)*(1.0-FREE(I,J))
      ADD(1)=(1.0-ENDI+II)*(1.0-ENDJ+JJ)
      ADD(2)=(ENDI-II)    *(1.0-ENDJ+JJ)
      ADD(3)=(1.0-ENDI+II)*(ENDJ-JJ)
      ADD(4)=(ENDI-II)    *(ENDJ-JJ)
      ICOUNT=0
      DO154 JJJ=JJ,JY
      DO154 III=II,IX
      ICOUNT=ICOUNT+1
      IF (III.LT.1.OR.III.GT.IT.OR.JJJ.LT.1.OR.JJJ.GT.JT) GO TO154
      DEPTH(III,JJJ)=DEPTH(III,JJJ)+AA* ADD(ICOUNT)
  154 CONTINUE
   35 CONTINUE
      DO 55 I=1,IT
      DO 55 J=1,JT
      IF (SEALND(I,J).EQ.0.0) GO TO 55
      FREE(I,J)=1.0-PERICE(I,J)
      IF (FREE(I,J).GT.0.99.OR.DEPTH(I,J).EQ.0.) GO TO 56
      HICE(I,J)=DEPTH(I,J)/(1.0-FREE(I,J))
  104 CONTINUE
      GO TO 55
   56 FREE(I,J)=1.0
      HICE(I,J)=0.0
      HSNO(I,J)=0.0
   55 CONTINUE
      IF(IHEMI.EQ.1) GO TO 93
      IF(NCB.NE.1) GO TO 93
      I=12
      J=13
      PRINT 92,UICE(I,J),VICE(I,J),HICE(I,J),HSNO(I,J),FREE(I,J),
     1 NITER,UMAT(I,J,M),VMAT(I,J,M),TEMPM(I,J,M),DEWM(I,J,M)
   92 FORMAT (4X,'FINAL UICE =',F9.5,', VICE =',F9.5,', HICE =',F8.5,
     2 ', HSNO =',F8.5,', FREE =',F8.5,', AND THE NUMBER OF ITERATIONS W
     4AS',I3/1X,'ATMOSPHERIC INPUTS',4F10.5,'THESE LAST 2 LINES ARE FOR
     5POINT 12,13')
   93 CONTINUE
      RETURN
      END
