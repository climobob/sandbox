      SUBROUTINE DCDGFP (CVALS,FPVAL)
C$$$  SUBPROGRAM DOCUMENTATION BLOCK
C
C SUBPROGRAM:    DCDGFP       DECODE GRIB FLOATING-POINT NUMBER
C   PRGMMR: MICHAEL W. HAM   ORG: CENTEL     DATE: 89-08-03
C
C ABSTRACT: DECODE GRIB CODE REPRESENTATION TO FLOATING-POINT
C   NUMBER.  THE GRIB REPRESENTATION CONSISTS OF FOUR BYTES
C   AS SHOWN BELOW:
C     SAAAAAAA BBBBBBBB BBBBBBBB BBBBBBBB, WHERE
C     S IS A SIGN BIT (0 = POSITIVE, 1 = NEGATIVE)
C     A IS A SEVEN-BIT CHARACTERISTIC (64 BIAS)
C     B IS A 24-BIT MANTISSA (BINARY FRACTION)
C   THE FLOATING-POINT NUMBER R MAY BE RECOVERED WITH THE FORMULA
C     R = (-1) ** S * 2 ** (-24) * B * 16 ** (A-64)
C   NOTE: THIS IS HOW SINGLE PRECISION FLOATING-POINT NUMBERS ARE
C         STORED ON IBM MACHINES
C
C PROGRAM HISTORY LOG:
C   90-05-11  HAM             ORIGINAL IMPLEMENTATION
C
C USAGE:    CALL DCDGFP(CVALS,FPVAL)
C   INPUT ARGUMENT LIST:
C     CVALS(4) - CHAR -- ARRAY CONTAINING GRIB CODE REPRESENTATION
C
C   OUTPUT ARGUMENT LIST:      (INCLUDING WORK ARRAYS)
C     FPVAL    - REAL -- THE FLOATING-POINT NUMBER R
C
C ATTRIBUTES:
C   LANGUAGE: ANSI FORTRAN
C   MACHINE:  MACHINE-INDEPENDENT
C
C$$$
C
      CHARACTER CVALS(4)
      INTEGER   IEXP,IMANT,IOCT1,ISIGN
      REAL      FPVAL
C
      IOCT1 = ICHAR(CVALS(1))
      IF(IOCT1 .GE. 128) THEN
        ISIGN = -1
      ELSE
        ISIGN = 1
      ENDIF
      IEXP = MOD(IOCT1,128)
      IMANT = 0
      DO 100 I=2,4
        IMANT = IMANT * 256 + ICHAR(CVALS(I))
  100 CONTINUE
C
      FPVAL = ISIGN * 2.0 ** (-24) * IMANT * 16.0 ** (IEXP - 64)
C
      RETURN
      END
