CFPP$ NOCONCUR R
      SUBROUTINE SUMFNS (FLN,AP,QLN,N)
C$$$  SUBPROGRAM DOCUMENTATION BLOCK
C                .      .    .                                       .
C SUBPROGRAM:    SUMFNS      PRODUCES SCALAR FOURIER COEFFICIENTS.
C   PRGMMR: JOSEPH SELA      ORG: W/NMC23    DATE: 88-04-06
C
C ABSTRACT: USES SPHERICAL HARMONICS OF A SCALAR TO PRODUCE THE
C   FOURIER COEFFICIENTS OF THE SCALAR ON THE NORTHERN
C   AND SOUTHERN HEMISPHERE LATITUDE CIRCLES FOR WHICH
C   THE INPUT LEGENDRE FUNCTIONS APPLY.
C
C PROGRAM HISTORY LOG:
C   88-04-06  JOSEPH SELA
C
C USAGE:    CALL SUMFNS (FLN, AP, QLN, N)
C   INPUT ARGUMENT LIST:
C     FLN      - ARRAY OF SPHERICAL HARMONICS.
C     QLN      - ARRAY OF ASSOCIATED LEGENDRE FUNCTIONS.
C     N        - NUMBER OF FIELDS IN FLN AND AP ARRAYS.
C
C   OUTPUT ARGUMENT LIST:
C     AP       - ARRAY OF FOURIER REPRESENTATIONS OF FIELDS ON
C                NORTHERN AND SOUTHERN HEMISPHERE LATITUDE CIRCLES.
C
C REMARKS: SUBROUTINE SUMFNS IS THE SAME AS SUBROUTINE SUMSNS
C   EXCEPT FOR DIMENSION OF AP ARRAY.
C
C ATTRIBUTES:
C   LANGUAGE: FORTRAN 200.
C   MACHINE:  CYBER 205.
C
C$$$
      DIMENSION AP( 126 ,2,N),
     1 QLN( 4032 ), FLN( 4032 ,N)
      DIMENSION                  SEV( 126 ), SOD( 126 )
      DIMENSION                  SEV2( 126 ), SOD2( 126 )
CC
      NPAIR = ( 63 -3)/2
      DO 1 K=1,MOD(N,2)
      DO 20  I=1, 126
      SEV(I) = QLN(I) * FLN(I,K)
  20  CONTINUE
      LEN =  126  - 2
      DO 30  I=1,LEN
      SOD(I) = QLN(I+ 126 ) * FLN(I+ 126 ,K)
  30  CONTINUE
      SOD( 126 -1) = 0.0 E 0
      SOD( 126   ) = 0.0 E 0
      IPLUS =  126 *2 - 2
      LEN   =  126  - 4
CC
      DO 60  J=1,NPAIR
      DO 40  I=1,LEN
      SEV(I) = SEV(I) + QLN(I+IPLUS) * FLN(I+IPLUS,K)
  40  CONTINUE
      IPLUS = IPLUS + LEN
      LEN = LEN - 2
CC
      DO 50  I=1,LEN
      SOD(I) = SOD(I) + QLN(I+IPLUS) * FLN(I+IPLUS,K)
  50  CONTINUE
      IPLUS = IPLUS + LEN
      LEN = LEN - 2
  60  CONTINUE
CC
      DO 70  I=1,LEN
      SEV(I) = SEV(I) + QLN(I+IPLUS) * FLN(I+IPLUS,K)
  70  CONTINUE
CC
      DO 90  I=1, 126
      AP(I,1,K) = SEV(I) + SOD(I)
      AP(I,2,K) = SEV(I) - SOD(I)
  90  CONTINUE
    1 CONTINUE

CRAYCMIC$ DO ALL PRIVATE(SEV,SOD,SEV2,SOD2) AUTOSCOPE
      DO 2 K=MOD(N,2)+1,N,2
      DO 200 I=1, 126
      SEV(I) = QLN(I) * FLN(I,K)
      SEV2(I) = QLN(I) * FLN(I,K+1)
  200 CONTINUE
      LEN =  126  - 2
      DO 300 I=1,LEN
      SOD(I) = QLN(I+ 126 ) * FLN(I+ 126 ,K)
      SOD2(I) = QLN(I+ 126 ) * FLN(I+ 126 ,K+1)
  300 CONTINUE
      SOD( 126 -1) = 0.0 E 0
      SOD( 126   ) = 0.0 E 0
      SOD2( 126 -1) = 0.0 E 0
      SOD2( 126   ) = 0.0 E 0
      IPLUS =  126 *2 - 2
      LEN   =  126  - 4
CC
      DO 600 J=1,NPAIR
      DO 400 I=1,LEN
      SEV(I) = SEV(I) + QLN(I+IPLUS) * FLN(I+IPLUS,K)
      SEV2(I) = SEV2(I) + QLN(I+IPLUS) * FLN(I+IPLUS,K+1)
  400 CONTINUE
      IPLUS = IPLUS + LEN
      LEN = LEN - 2
CC
      DO 500 I=1,LEN
      SOD(I) = SOD(I) + QLN(I+IPLUS) * FLN(I+IPLUS,K)
      SOD2(I) = SOD2(I) + QLN(I+IPLUS) * FLN(I+IPLUS,K+1)
  500 CONTINUE
      IPLUS = IPLUS + LEN
      LEN = LEN - 2
  600 CONTINUE
CC
      DO 700 I=1,LEN
      SEV(I) = SEV(I) + QLN(I+IPLUS) * FLN(I+IPLUS,K)
      SEV2(I) = SEV2(I) + QLN(I+IPLUS) * FLN(I+IPLUS,K+1)
  700 CONTINUE
CC
      DO 900 I=1, 126
      AP(I,1,K) = SEV(I) + SOD(I)
      AP(I,2,K) = SEV(I) - SOD(I)
      AP(I,1,K+1) = SEV2(I) + SOD2(I)
      AP(I,2,K+1) = SEV2(I) - SOD2(I)
  900 CONTINUE
    2 CONTINUE
      RETURN
      END
