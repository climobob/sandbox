CFPP$ NOCONCUR R
      SUBROUTINE SUMV2A (VLN,AP,QLN,N)
C$$$  SUBPROGRAM DOCUMENTATION BLOCK
C                .      .    .                                       .
C SUBPROGRAM:    SUMVNS      PRODUCES VECTOR FOURIER COEFFICIENTS.
C   PRGMMR: JOSEPH SELA      ORG: W/NMC23    DATE: 88-04-04
C
C ABSTRACT: USES SPHERICAL HARMONICS OF A PSEUDO VECTOR TO PRODUCE
C   THE FOURIER COEFFICIENTS OF THE FIELDS ON THE NORTHERN
C   AND SOUTHERN HEMISPHERE LATITUDE CIRCLES FOR WHICH
C   THE INPUT LEGENDRE FUNCTIONS APPLY.
C
C PROGRAM HISTORY LOG:
C   88-04-04  JOSEPH SELA
C
C USAGE:    CALL SUMVNS (VLN, AP, QLN, N)
C   INPUT ARGUMENT LIST:
C     VLN      - ARRAY OF SPHERICAL HARMONICS.
C     QLN      - ARRAY OF ASSOCIATED LEGENDRE FUNCTIONS.
C     N        - NUMBER OF FIELDS IN VLN AND AP ARRAYS.
C
C   OUTPUT ARGUMENT LIST:
C     AP       - ARRAY OF FOURIER REPRESENTATIONS OF FIELDS ON
C                NORTHERN AND SOUTHERN HEMISPHERE LATITUDE CIRCLES.
C
C ATTRIBUTES:
C   LANGUAGE: FORTRAN 200.
C   MACHINE:  CYBER 205.
C
C$$$
      DIMENSION AP( 384 ,N),
     1 QLN( 4158 ), VLN( 4158 ,N)
      DIMENSION                  SEV( 126 ), SOD( 126 )
      DIMENSION                  SEV2( 126 ), SOD2( 126 )
CC
      NPAIR = ( 64 -2)/2
      DO 1 K=1,MOD(N,2)
      DO 20  I=1, 126
      SEV(I) = QLN(I) * VLN(I,K)
      SOD(I) = QLN(I+ 126 ) * VLN(I+ 126 ,K)
  20  CONTINUE
      IPLUS =  126 *2
      LEN   =  126 -2
CC
      DO 60  J=1,NPAIR
      DO 40  I=1,LEN
      SEV(I) = SEV(I) + QLN(I+IPLUS) * VLN(I+IPLUS,K)
  40  CONTINUE
      IPLUS = IPLUS + LEN
      LEN = LEN - 2
CC
      DO 50  I=1,LEN
      SOD(I) = SOD(I) + QLN(I+IPLUS) * VLN(I+IPLUS,K)
  50  CONTINUE
      IPLUS = IPLUS + LEN
      LEN = LEN - 2
  60  CONTINUE
CC
      DO 90  I=1, 126
      AP(I      ,K) = SEV(I) + SOD(I)
      AP(I+ 192 ,K) = SEV(I) - SOD(I)
  90  CONTINUE
    1 CONTINUE

CRAYCMIC$ DO ALL PRIVATE(SEV,SOD,SEV2,SOD2) AUTOSCOPE
      DO 2 K=MOD(N,2)+1,N,2
      DO 200 I=1, 126
      SEV(I) = QLN(I) * VLN(I,K)
      SOD(I) = QLN(I+ 126 ) * VLN(I+ 126 ,K)
      SEV2(I) = QLN(I) * VLN(I,K+1)
      SOD2(I) = QLN(I+ 126 ) * VLN(I+ 126 ,K+1)
  200 CONTINUE
      IPLUS =  126 *2
      LEN   =  126 -2
CC
      DO 600 J=1,NPAIR
      DO 400 I=1,LEN
      SEV(I) = SEV(I) + QLN(I+IPLUS) * VLN(I+IPLUS,K)
      SEV2(I) = SEV2(I) + QLN(I+IPLUS) * VLN(I+IPLUS,K+1)
  400 CONTINUE
      IPLUS = IPLUS + LEN
      LEN = LEN - 2
CC
      DO 500 I=1,LEN
      SOD(I) = SOD(I) + QLN(I+IPLUS) * VLN(I+IPLUS,K)
      SOD2(I) = SOD2(I) + QLN(I+IPLUS) * VLN(I+IPLUS,K+1)
  500 CONTINUE
      IPLUS = IPLUS + LEN
      LEN = LEN - 2
  600 CONTINUE
CC
      DO 900 I=1, 126
      AP(I      ,K) = SEV(I) + SOD(I)
      AP(I+ 192 ,K) = SEV(I) - SOD(I)
      AP(I      ,K+1) = SEV2(I) + SOD2(I)
      AP(I+ 192 ,K+1) = SEV2(I) - SOD2(I)
  900 CONTINUE
    2 CONTINUE
      RETURN
      END
