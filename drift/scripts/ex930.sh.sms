#!/bin/ksh 
########################################################### 
echo "-----------------------------------------------------"
echo "J930 - Execute a simple sea ice drift model for the  " 
echo "  Arctic and Antarctic, and produce bulletins for OSO" 
echo "History: Sep 1997 - First implementation of new      "
echo "  operational script                                 " 
echo "       : June 1998 - Modified to collaborate with T-170 MRF  "
echo "       : FEB 2000 - Convert to IBM SP."
echo "       : jun 2001 - modified to increase output from 6 to 16 days "
########################################################### 

#----------------------------------------------------------
#Sea ice drift forecast model control script.
#Robert Grumbine, author.  30 June 1997.
#Modified 09 September 1997 by L. D. Burroughs
#----------------------------------------------------------

cd $DATA

########################################
set -x
msg="HAS BEGUN!"
postmsg "$jlogfile" "$msg"
###########################

export FILENV=$DATA/.assign.FORTRAN

#set MP_HOLDTIME to a larger number to speed up processing by 
# preventing CPUs from being rescheduled as frequently

export MP_HOLDTIME=2666666

echo " "
echo PDY="$PDY"
echo PDYm1="$PDYm1"
echo " "

#-----------------------------------------------------
# copy over the fix files
#-----------------------------------------------------
cp $FIXsice/seaice_quote           .
cp $FIXsice/seaice_forecast.points .

pgm=seaice_sicedrft
export pgm; prep_step

#-----------------------------------------------------
##make unit assignments
#-----------------------------------------------------
#export XLFUNIT_47="seaice_forecast.points"
#export XLFUNIT_60="fl.out"
#export XLFUNIT_61="ops.out"
#export XLFUNIT_62="ak.out"
#export XLFUNIT_63="global.tran"
#export XLFUNIT_64="alaska.tran"
#echo $PDY > dtg.ft90
#export XLFUNIT_90="dtg.ft90"
#export XLFUNIT_91="seaice_quote"

#-----------------------------------------------------
# the "ln" statement will be replaced later.
#-----------------------------------------------------
ln seaice_forecast.points fort.47
cp seaice_quote fort.91

echo $PDY > alpha
ln alpha             fort.90

#-----------------------------------------------------
#get the ice line points
#-----------------------------------------------------
cp $FIXsice/seaice_com.ipasaiji.npoc.arctic niceline
cp $FIXsice/seaice_com.ipasaiji.npoc.antarc siceline
#export XLFUNIT_48="niceline"
#export XLFUNIT_49="siceline"
ln niceline   fort.48
ln siceline   fort.49

#-----------------------------------------------------
#units for the mrf data
#-----------------------------------------------------
BASE=/com/mrf/prod/mrf.$PDY/drfmr.t00z.sf
iunit=10
for hh in  00  12  24  36  48  60  72  84  96 108 120 132 144 156 168 180 192 \
          204 216 228 240 252 264 276 288 300 312 324 336 348 360 372 384
do
  iunit=`expr $iunit + 1 `
  #eval export XLFUNIT_${iunit}="${BASE}$hh"
  cp ${BASE}$hh fort.$iunit
done

#-----------------------------------------------------
#execute the model
#-----------------------------------------------------
msg="pgm sicedrft has BEGUN!"
postmsg "$jlogfile" "$msg"

echo 32 | $EXECsice/seaice_sicedrft >> $pgmout 2> errfile
err=$?; export err; err_chk

ln fort.60 fl.out
ln fort.61 ops.out
ln fort.62 ak.out
ln fort.63 global.tran
ln fort.64 alaska.tran

#-----------------------------------------------------
#Distribute the output
#-----------------------------------------------------
if [ $SENDCOM = "YES" ] ; then
  cp ops.out $COMOUT/global.$PDY
  cp ak.out $COMOUT/alaska.$PDY
  cp global.tran $COMOUT/global.tran.$PDY
  cp alaska.tran $COMOUT/alaska.tran.$PDY
  cp global.tran $pcom/global.tran.$job
  cp alaska.tran $pcom/alaska.tran.$job
fi

if [ "$SENDDBN" = 'YES' ] ; then
 $DBNROOT/bin/dbn_alert TRAN $NET $job $pcom/global.tran.$job
 $DBNROOT/bin/dbn_alert TRAN $NET $job $pcom/alaska.tran.$job
fi

#####################################################################
# GOOD RUN
set +x
echo "**************$job COMPLETED NORMALLY ON THE IBM SP"
echo "**************$job COMPLETED NORMALLY ON THE IBM SP"
echo "**************$job COMPLETED NORMALLY ON THE IBM SP"
set -x
#####################################################################

#################################

msg='HAS COMPLETED NORMALLY.'
echo $msg
postmsg "$jlogfile" "$msg"


#------------------------------------------------------------------
# End of script
#------------------------------------------------------------------

